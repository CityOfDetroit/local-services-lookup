{"id":"node_modules/@mapbox/geojsonhint/lib/index.js","dependencies":[{"name":"/home/edgar/Documents/REPOS/local-services-lookup/package.json","includedInParent":true,"mtime":1562161593563},{"name":"/home/edgar/Documents/REPOS/local-services-lookup/.babelrc","includedInParent":true,"mtime":1562161593307},{"name":"/home/edgar/Documents/REPOS/local-services-lookup/node_modules/@mapbox/geojsonhint/package.json","includedInParent":true,"mtime":1562161610379},{"name":"jsonlint-lines","loc":{"line":1,"column":23},"parent":"/home/edgar/Documents/REPOS/local-services-lookup/node_modules/@mapbox/geojsonhint/lib/index.js","resolved":"/home/edgar/Documents/REPOS/local-services-lookup/node_modules/jsonlint-lines/lib/jsonlint.js"},{"name":"./object","loc":{"line":2,"column":30},"parent":"/home/edgar/Documents/REPOS/local-services-lookup/node_modules/@mapbox/geojsonhint/lib/index.js","resolved":"/home/edgar/Documents/REPOS/local-services-lookup/node_modules/@mapbox/geojsonhint/lib/object.js"}],"generated":{"js":"var jsonlint = require('jsonlint-lines'),\n  geojsonHintObject = require('./object');\n\n/**\n * @alias geojsonhint\n * @param {(string|object)} GeoJSON given as a string or as an object\n * @param {Object} options\n * @param {boolean} [options.noDuplicateMembers=true] forbid repeated\n * properties. This is only available for string input, becaused parsed\n * Objects cannot have duplicate properties.\n * @param {boolean} [options.precisionWarning=true] warn if GeoJSON contains\n * unnecessary coordinate precision.\n * @returns {Array<Object>} an array of errors\n */\nfunction hint(str, options) {\n\n    var gj, errors = [];\n\n    if (typeof str === 'object') {\n        gj = str;\n    } else if (typeof str === 'string') {\n        try {\n            gj = jsonlint.parse(str);\n        } catch(e) {\n            var match = e.message.match(/line (\\d+)/);\n            var lineNumber = parseInt(match[1], 10);\n            return [{\n                line: lineNumber - 1,\n                message: e.message,\n                error: e\n            }];\n        }\n    } else {\n        return [{\n            message: 'Expected string or object as input',\n            line: 0\n        }];\n    }\n\n    errors = errors.concat(geojsonHintObject.hint(gj, options));\n\n    return errors;\n}\n\nmodule.exports.hint = hint;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@mapbox/geojsonhint/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}}],"sources":{"node_modules/@mapbox/geojsonhint/lib/index.js":"var jsonlint = require('jsonlint-lines'),\n  geojsonHintObject = require('./object');\n\n/**\n * @alias geojsonhint\n * @param {(string|object)} GeoJSON given as a string or as an object\n * @param {Object} options\n * @param {boolean} [options.noDuplicateMembers=true] forbid repeated\n * properties. This is only available for string input, becaused parsed\n * Objects cannot have duplicate properties.\n * @param {boolean} [options.precisionWarning=true] warn if GeoJSON contains\n * unnecessary coordinate precision.\n * @returns {Array<Object>} an array of errors\n */\nfunction hint(str, options) {\n\n    var gj, errors = [];\n\n    if (typeof str === 'object') {\n        gj = str;\n    } else if (typeof str === 'string') {\n        try {\n            gj = jsonlint.parse(str);\n        } catch(e) {\n            var match = e.message.match(/line (\\d+)/);\n            var lineNumber = parseInt(match[1], 10);\n            return [{\n                line: lineNumber - 1,\n                message: e.message,\n                error: e\n            }];\n        }\n    } else {\n        return [{\n            message: 'Expected string or object as input',\n            line: 0\n        }];\n    }\n\n    errors = errors.concat(geojsonHintObject.hint(gj, options));\n\n    return errors;\n}\n\nmodule.exports.hint = hint;\n"},"lineCount":46}},"error":null,"hash":"c39af25aefa91c160b4f77daa03ae595","cacheData":{"env":{}}}