{"id":"node_modules/@mapbox/geojson-coords/index.js","dependencies":[{"name":"/Users/doit/Documents/REPOS/local-services-lookup/package.json","includedInParent":true,"mtime":1544814979195},{"name":"/Users/doit/Documents/REPOS/local-services-lookup/.babelrc","includedInParent":true,"mtime":1544814978542},{"name":"/Users/doit/Documents/REPOS/local-services-lookup/node_modules/@mapbox/geojson-coords/package.json","includedInParent":true,"mtime":1543942716933},{"name":"@mapbox/geojson-normalize","loc":{"line":1,"column":31},"parent":"/Users/doit/Documents/REPOS/local-services-lookup/node_modules/@mapbox/geojson-coords/index.js","resolved":"/Users/doit/Documents/REPOS/local-services-lookup/node_modules/@mapbox/geojson-normalize/index.js"},{"name":"geojson-flatten","loc":{"line":2,"column":29},"parent":"/Users/doit/Documents/REPOS/local-services-lookup/node_modules/@mapbox/geojson-coords/index.js","resolved":"/Users/doit/Documents/REPOS/local-services-lookup/node_modules/geojson-flatten/index.js"},{"name":"./flatten","loc":{"line":3,"column":22},"parent":"/Users/doit/Documents/REPOS/local-services-lookup/node_modules/@mapbox/geojson-coords/index.js","resolved":"/Users/doit/Documents/REPOS/local-services-lookup/node_modules/@mapbox/geojson-coords/flatten.js"}],"generated":{"js":"var geojsonNormalize = require('@mapbox/geojson-normalize'),\n    geojsonFlatten = require('geojson-flatten'),\n    flatten = require('./flatten');\n\nmodule.exports = function(_) {\n    if (!_) return [];\n    var normalized = geojsonFlatten(geojsonNormalize(_)),\n        coordinates = [];\n    normalized.features.forEach(function(feature) {\n        if (!feature.geometry) return;\n        coordinates = coordinates.concat(flatten(feature.geometry.coordinates));\n    });\n    return coordinates;\n};\n","map":{"mappings":[{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@mapbox/geojson-coords/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}}],"sources":{"node_modules/@mapbox/geojson-coords/index.js":"var geojsonNormalize = require('@mapbox/geojson-normalize'),\n    geojsonFlatten = require('geojson-flatten'),\n    flatten = require('./flatten');\n\nmodule.exports = function(_) {\n    if (!_) return [];\n    var normalized = geojsonFlatten(geojsonNormalize(_)),\n        coordinates = [];\n    normalized.features.forEach(function(feature) {\n        if (!feature.geometry) return;\n        coordinates = coordinates.concat(flatten(feature.geometry.coordinates));\n    });\n    return coordinates;\n};\n"},"lineCount":15}},"hash":"9bcb4df15ccc62cee30a6ef060e96fc3","cacheData":{"env":{}}}