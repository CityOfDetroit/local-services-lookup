(self.webpackChunklocal_services_lookup=self.webpackChunklocal_services_lookup||[]).push([[47],{257:function(t,e){var r,o;r=this,o=function(){"use strict";var t={},e=6378137,r=57.29577951308232,o=.017453292519943,n={type:"link",properties:{href:"http://spatialreference.org/ref/sr-org/6928/ogcwkt/",type:"ogcwkt"}};function i(t){return"[object Array]"===Object.prototype.toString.call(t)}function s(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t}function a(t){if(t.type)switch(t.type){case"Point":return[t.coordinates[0],t.coordinates[1],t.coordinates[0],t.coordinates[1]];case"MultiPoint":case"LineString":return u(t.coordinates);case"MultiLineString":case"Polygon":return c(t.coordinates);case"MultiPolygon":return function(t){for(var e=null,r=null,o=null,n=null,i=0;i<t.length;i++)for(var s=t[i],a=0;a<s.length;a++)for(var c=s[a],u=0;u<c.length;u++){var l=c[u],h=l[0],p=l[1];(null===e||h<e)&&(e=h),(null===r||h>r)&&(r=h),(null===o||p<o)&&(o=p),(null===n||p>n)&&(n=p)}return[e,o,r,n]}(t.coordinates);case"Feature":return t.geometry?a(t.geometry):null;case"FeatureCollection":return function(t){for(var e,r=[],o=t.features.length-1;o>=0;o--)e=a(t.features[o].geometry),r.push([e[0],e[1]]),r.push([e[2],e[3]]);return u(r)}(t);case"GeometryCollection":return function(t){for(var e,r=[],o=t.geometries.length-1;o>=0;o--)e=a(t.geometries[o]),r.push([e[0],e[1]]),r.push([e[2],e[3]]);return u(r)}(t);default:throw new Error("Unknown type: "+t.type)}return null}function c(t){for(var e=null,r=null,o=null,n=null,i=0;i<t.length;i++)for(var s=t[i],a=0;a<s.length;a++){var c=s[a],u=c[0],l=c[1];(null===e||u<e)&&(e=u),(null===r||u>r)&&(r=u),(null===o||l<o)&&(o=l),(null===n||l>n)&&(n=l)}return[e,o,r,n]}function u(t){for(var e=null,r=null,o=null,n=null,i=0;i<t.length;i++){var s=t[i],a=s[0],c=s[1];(null===e||a<e)&&(e=a),(null===r||a>r)&&(r=a),(null===o||c<o)&&(o=c),(null===n||c>n)&&(n=c)}return[e,o,r,n]}function l(t){var e=a(t);return{x:e[0],y:e[1],w:Math.abs(e[0]-e[2]),h:Math.abs(e[1]-e[3])}}function h(t){return t*r}function p(t){return t*o}function f(t,e){for(var r=0;r<t.length;r++)"number"===typeof t[r][0]&&(t[r]=e(t[r])),"object"===typeof t[r]&&(t[r]=f(t[r],e));return t}function y(t){var r=t[0],o=t[1];return[h(r/e)-360*Math.floor((h(r/e)+180)/360),h(Math.PI/2-2*Math.atan(Math.exp(-1*o/e)))]}function g(t){var r=t[0],o=Math.max(Math.min(t[1],89.99999),-89.99999);return[p(r)*e,e/2*Math.log((1+Math.sin(p(o)))/(1-Math.sin(p(o))))]}function d(t,e,r){if("Point"===t.type)t.coordinates=e(t.coordinates);else if("Feature"===t.type)t.geometry=d(t.geometry,e,!0);else if("FeatureCollection"===t.type)for(var o=0;o<t.features.length;o++)t.features[o]=d(t.features[o],e,!0);else if("GeometryCollection"===t.type)for(var i=0;i<t.geometries.length;i++)t.geometries[i]=d(t.geometries[i],e,!0);else t.coordinates=f(t.coordinates,e);return r||e===g&&(t.crs=n),e===y&&delete t.crs,t}function v(t){return d(t,g)}function w(t){return d(t,y)}function P(t,e){return t[0]>e[0]?-1:t[0]<e[0]?1:t[1]>e[1]?-1:t[1]<e[1]?1:0}function m(t,e,r){return(o=(e[0]-t[0])*(r[1]-t[1])-(r[0]-t[0])*(e[1]-t[1]))<(n=0)?-1:o>n?1:0;var o,n}function M(t,e){var r=e[0]-t[0],o=e[1]-t[1];return r*r+o*o}function T(t,e){var r=e;for(var o in t){var n=m(e,r,t[o]);(-1===n||0===n&&M(e,t[o])>M(e,r))&&(r=t[o])}return r}function C(t){if(0===t.length)return[];if(1===t.length)return t;for(var e=[t.sort(P)[0]],r=0;r<e.length;r++){var o=T(t,e[r]);o!==e[0]&&e.push(o)}return e}function S(t,e){for(var r=!1,o=-1,n=t.length,i=n-1;++o<n;i=o)(t[o][1]<=e[1]&&e[1]<t[i][1]||t[i][1]<=e[1]&&e[1]<t[o][1])&&e[0]<(t[i][0]-t[o][0])*(e[1]-t[o][1])/(t[i][1]-t[o][1])+t[o][0]&&(r=!r);return r}function F(t,e){if(t&&t.length){if(1===t.length)return S(t[0],e);if(S(t[0],e)){for(var r=1;r<t.length;r++)if(S(t[r],e))return!1;return!0}return!1}return!1}function L(t,e,r,o){var n=(o[0]-r[0])*(t[1]-r[1])-(o[1]-r[1])*(t[0]-r[0]),i=(e[0]-t[0])*(t[1]-r[1])-(e[1]-t[1])*(t[0]-r[0]),s=(o[1]-r[1])*(e[0]-t[0])-(o[0]-r[0])*(e[1]-t[1]);if(0!==s){var a=n/s,c=i/s;if(0<=a&&a<=1&&0<=c&&c<=1)return!0}return!1}function x(t){return!isNaN(parseFloat(t))&&isFinite(t)}function b(t,e){if(x(t[0][0])){if(x(e[0][0])){for(var r=0;r<t.length-1;r++)for(var o=0;o<e.length-1;o++)if(L(t[r],t[r+1],e[o],e[o+1]))return!0}else for(var n=0;n<e.length;n++)if(b(t,e[n]))return!0}else for(var i=0;i<t.length;i++)if(b(t[i],e))return!0;return!1}function k(t){for(var e=[],r=0;r<t.length;r++){var o=t[r].slice();!1===G(o[0],o[o.length-1])&&o.push(o[0]),e.push(o)}return e}function G(t,e){for(var r=0;r<t.length;r++)if(t[r]!==e[r])return!1;return!0}function E(t,e){if(t.length!==e.length)return!1;for(var r=t.slice().sort(P),o=e.slice().sort(P),n=0;n<r.length;n++){if(r[n].length!==o[n].length)return!1;for(var i=0;i<r.length;i++)if(r[n][i]!==o[n][i])return!1}return!0}var O=["length"];function V(t){if(t)switch(t.type){case"Point":return new j(t);case"MultiPoint":return new H(t);case"LineString":return new N(t);case"MultiLineString":return new A(t);case"Polygon":return new _(t);case"MultiPolygon":return new I(t);case"Feature":return new J(t);case"FeatureCollection":return new R(t);case"GeometryCollection":return new U(t);default:throw new Error("Unknown type: "+t.type)}}function j(t){var e=Array.prototype.slice.call(arguments);if(t&&"Point"===t.type&&t.coordinates)s(this,t);else if(t&&i(t))this.coordinates=t;else{if(!(e.length>=2))throw"Terraformer: invalid input for Terraformer.Point";this.coordinates=e}this.type="Point"}function H(t){if(t&&"MultiPoint"===t.type&&t.coordinates)s(this,t);else{if(!i(t))throw"Terraformer: invalid input for Terraformer.MultiPoint";this.coordinates=t}this.type="MultiPoint"}function N(t){if(t&&"LineString"===t.type&&t.coordinates)s(this,t);else{if(!i(t))throw"Terraformer: invalid input for Terraformer.LineString";this.coordinates=t}this.type="LineString"}function A(t){if(t&&"MultiLineString"===t.type&&t.coordinates)s(this,t);else{if(!i(t))throw"Terraformer: invalid input for Terraformer.MultiLineString";this.coordinates=t}this.type="MultiLineString"}function _(t){if(t&&"Polygon"===t.type&&t.coordinates)s(this,t);else{if(!i(t))throw"Terraformer: invalid input for Terraformer.Polygon";this.coordinates=t}this.type="Polygon"}function I(t){if(t&&"MultiPolygon"===t.type&&t.coordinates)s(this,t);else{if(!i(t))throw"Terraformer: invalid input for Terraformer.MultiPolygon";this.coordinates=t}this.type="MultiPolygon"}function J(t){if(t&&"Feature"===t.type)s(this,t);else{if(!(t&&t.type&&t.coordinates))throw"Terraformer: invalid input for Terraformer.Feature";this.geometry=t}this.type="Feature"}function R(t){if(t&&"FeatureCollection"===t.type&&t.features)s(this,t);else{if(!i(t))throw"Terraformer: invalid input for Terraformer.FeatureCollection";this.features=t}this.type="FeatureCollection"}function U(t){if(t&&"GeometryCollection"===t.type&&t.geometries)s(this,t);else if(i(t))this.geometries=t;else{if(!t.coordinates||!t.type)throw"Terraformer: invalid input for Terraformer.GeometryCollection";this.type="GeometryCollection",this.geometries=[t]}this.type="GeometryCollection"}function q(t,e,r){for(var o=g(t),n=r||64,i={type:"Polygon",coordinates:[[]]},s=1;s<=n;s++){var a=s*(360/n)*Math.PI/180;i.coordinates[0].push([o[0]+e*Math.cos(a),o[1]+e*Math.sin(a)])}return i.coordinates=k(i.coordinates),w(i)}function B(t,e,r){var o=r||64,n=e||250;if(!t||t.length<2||!n||!o)throw new Error("Terraformer: missing parameter for Terraformer.Circle");s(this,new J({type:"Feature",geometry:q(t,n,o),properties:{radius:n,center:t,steps:o}}))}return V.prototype.toMercator=function(){return v(this)},V.prototype.toGeographic=function(){return w(this)},V.prototype.envelope=function(){return l(this)},V.prototype.bbox=function(){return a(this)},V.prototype.convexHull=function(){var t,e,r=[];if("Point"===this.type)return null;if("LineString"===this.type||"MultiPoint"===this.type){if(!(this.coordinates&&this.coordinates.length>=3))return null;r=this.coordinates}else if("Polygon"===this.type||"MultiLineString"===this.type){if(!(this.coordinates&&this.coordinates.length>0))return null;for(t=0;t<this.coordinates.length;t++)r=r.concat(this.coordinates[t]);if(r.length<3)return null}else if("MultiPolygon"===this.type){if(!(this.coordinates&&this.coordinates.length>0))return null;for(t=0;t<this.coordinates.length;t++)for(e=0;e<this.coordinates[t].length;e++)r=r.concat(this.coordinates[t][e]);if(r.length<3)return null}else if("Feature"===this.type)return new V(this.geometry).convexHull();return new _({type:"Polygon",coordinates:k([C(r)])})},V.prototype.toJSON=function(){var t={};for(var e in this)this.hasOwnProperty(e)&&-1===O.indexOf(e)&&(t[e]=this[e]);return t.bbox=a(this),t},V.prototype.contains=function(t){return new V(t).within(this)},V.prototype.within=function(t){var e,r,o;if("Feature"===t.type&&(t=t.geometry),"Point"===t.type&&"Point"===this.type)return G(this.coordinates,t.coordinates);if("MultiLineString"===t.type&&"Point"===this.type)for(e=0;e<t.coordinates.length;e++){var n={type:"LineString",coordinates:t.coordinates[e]};if(this.within(n))return!0}if(("LineString"===t.type||"MultiPoint"===t.type)&&"Point"===this.type)for(e=0;e<t.coordinates.length;e++){if(this.coordinates.length!==t.coordinates[e].length)return!1;if(G(this.coordinates,t.coordinates[e]))return!0}if("Polygon"===t.type){if("Polygon"===this.type){if(t.coordinates.length===this.coordinates.length)for(e=0;e<this.coordinates.length;e++)if(E(this.coordinates[e],t.coordinates[e]))return!0;return!(!this.coordinates.length||!F(t.coordinates,this.coordinates[0][0]))&&!b(k(this.coordinates),k(t.coordinates))}if("Point"===this.type)return F(t.coordinates,this.coordinates);if("LineString"===this.type||"MultiPoint"===this.type){if(!this.coordinates||0===this.coordinates.length)return!1;for(e=0;e<this.coordinates.length;e++)if(!1===F(t.coordinates,this.coordinates[e]))return!1;return!0}if("MultiLineString"===this.type){for(e=0;e<this.coordinates.length;e++)if(!1===new N(this.coordinates[e]).within(t))return o++,!1;return!0}if("MultiPolygon"===this.type){for(e=0;e<this.coordinates.length;e++)if(!1===new V({type:"Polygon",coordinates:this.coordinates[e]}).within(t))return!1;return!0}}if("MultiPolygon"===t.type){if("Point"===this.type){if(t.coordinates.length)for(e=0;e<t.coordinates.length;e++)if(F(t.coordinates[e],this.coordinates)&&!1===b([this.coordinates],t.coordinates))return!0;return!1}if("Polygon"===this.type){for(e=0;e<this.coordinates.length;e++)if(t.coordinates[e].length===this.coordinates.length)for(r=0;r<this.coordinates.length;r++)if(E(this.coordinates[r],t.coordinates[e][r]))return!0;if(!1===b(this.coordinates,t.coordinates)&&t.coordinates.length){for(e=0;e<t.coordinates.length;e++)o=!1!==F(t.coordinates[e],this.coordinates[0][0]);return o}}else if("LineString"===this.type||"MultiPoint"===this.type)for(e=0;e<t.coordinates.length;e++){var i={type:"Polygon",coordinates:t.coordinates[e]};return!!this.within(i)}else{if("MultiLineString"===this.type){for(e=0;e<this.coordinates.length;e++)if(!1===new N(this.coordinates[e]).within(t))return!1;return!0}if("MultiPolygon"===this.type){for(e=0;e<t.coordinates.length;e++){var s={type:"Polygon",coordinates:t.coordinates[e]};if(!1===this.within(s))return!1}return!0}}}return!1},V.prototype.intersects=function(t){"Feature"===t.type&&(t=t.geometry);var e=new V(t);return!(!this.within(t)&&!e.within(this))||("Point"!==this.type&&"MultiPoint"!==this.type&&"Point"!==t.type&&"MultiPoint"!==t.type?b(this.coordinates,t.coordinates):"Feature"===this.type?new V(this.geometry).intersects(t):(function(){var t=Array.prototype.slice.apply(arguments);void 0!==typeof console&&console.warn&&console.warn.apply(console,t)}("Type "+this.type+" to "+t.type+" intersection is not supported by intersects"),!1))},j.prototype=new V,j.prototype.constructor=j,H.prototype=new V,H.prototype.constructor=H,H.prototype.forEach=function(t){for(var e=0;e<this.coordinates.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates]);return this},H.prototype.addPoint=function(t){return this.coordinates.push(t),this},H.prototype.insertPoint=function(t,e){return this.coordinates.splice(e,0,t),this},H.prototype.removePoint=function(t){return"number"===typeof t?this.coordinates.splice(t,1):this.coordinates.splice(this.coordinates.indexOf(t),1),this},H.prototype.get=function(t){return new j(this.coordinates[t])},N.prototype=new V,N.prototype.constructor=N,N.prototype.addVertex=function(t){return this.coordinates.push(t),this},N.prototype.insertVertex=function(t,e){return this.coordinates.splice(e,0,t),this},N.prototype.removeVertex=function(t){return this.coordinates.splice(t,1),this},A.prototype=new V,A.prototype.constructor=A,A.prototype.forEach=function(t){for(var e=0;e<this.coordinates.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates])},A.prototype.get=function(t){return new N(this.coordinates[t])},_.prototype=new V,_.prototype.constructor=_,_.prototype.addVertex=function(t){return this.insertVertex(t,this.coordinates[0].length-1),this},_.prototype.insertVertex=function(t,e){return this.coordinates[0].splice(e,0,t),this},_.prototype.removeVertex=function(t){return this.coordinates[0].splice(t,1),this},_.prototype.close=function(){this.coordinates=k(this.coordinates)},_.prototype.hasHoles=function(){return this.coordinates.length>1},_.prototype.holes=function(){var t=[];if(this.hasHoles())for(var e=1;e<this.coordinates.length;e++)t.push(new _([this.coordinates[e]]));return t},I.prototype=new V,I.prototype.constructor=I,I.prototype.forEach=function(t){for(var e=0;e<this.coordinates.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates])},I.prototype.get=function(t){return new _(this.coordinates[t])},I.prototype.close=function(){var t=[];return this.forEach((function(e){t.push(k(e))})),this.coordinates=t,this},J.prototype=new V,J.prototype.constructor=J,R.prototype=new V,R.prototype.constructor=R,R.prototype.forEach=function(t){for(var e=0;e<this.features.length;e++)t.apply(this,[this.features[e],e,this.features])},R.prototype.get=function(t){var e;return this.forEach((function(r){r.id===t&&(e=r)})),new J(e)},U.prototype=new V,U.prototype.constructor=U,U.prototype.forEach=function(t){for(var e=0;e<this.geometries.length;e++)t.apply(this,[this.geometries[e],e,this.geometries])},U.prototype.get=function(t){return new V(this.geometries[t])},B.prototype=new V,B.prototype.constructor=B,B.prototype.recalculate=function(){return this.geometry=q(this.properties.center,this.properties.radius,this.properties.steps),this},B.prototype.center=function(t){return t&&(this.properties.center=t,this.recalculate()),this.properties.center},B.prototype.radius=function(t){return t&&(this.properties.radius=t,this.recalculate()),this.properties.radius},B.prototype.steps=function(t){return t&&(this.properties.steps=t,this.recalculate()),this.properties.steps},B.prototype.toJSON=function(){return V.prototype.toJSON.call(this)},t.Primitive=V,t.Point=j,t.MultiPoint=H,t.LineString=N,t.MultiLineString=A,t.Polygon=_,t.MultiPolygon=I,t.Feature=J,t.FeatureCollection=R,t.GeometryCollection=U,t.Circle=B,t.toMercator=v,t.toGeographic=w,t.Tools={},t.Tools.positionToMercator=g,t.Tools.positionToGeographic=y,t.Tools.applyConverter=d,t.Tools.toMercator=v,t.Tools.toGeographic=w,t.Tools.createCircle=q,t.Tools.calculateBounds=a,t.Tools.calculateEnvelope=l,t.Tools.coordinatesContainPoint=S,t.Tools.polygonContainsPoint=F,t.Tools.arraysIntersectArrays=b,t.Tools.coordinatesContainPoint=S,t.Tools.coordinatesEqual=E,t.Tools.convexHull=C,t.Tools.isConvex=function(t){for(var e,r=0;r<t.length-3;r++){var o=t[r],n=t[r+1],i=t[r+2],s=[n[0]-o[0],n[1]-o[1]],a=i[0]*s[1]-i[1]*s[0]+s[0]*o[1]-s[1]*o[0];if(0===r)e=a<0;else if(e&&a>0||!e&&a<0)return!1}return!0},t.MercatorCRS=n,t.GeographicCRS={type:"link",properties:{href:"http://spatialreference.org/ref/epsg/4326/ogcwkt/",type:"ogcwkt"}},t},"object"===typeof t.exports&&(t.exports=o()),"object"===typeof window&&(r.Terraformer=o())}}]);