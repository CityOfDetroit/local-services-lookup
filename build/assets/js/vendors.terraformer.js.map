{"version":3,"file":"assets/js/vendors.terraformer.js","mappings":"ioBAAC,IAAUA,EAAMC,EAAND,EAYTE,KAZeD,EAYT,WACN,aAEA,IAAIE,EAAU,CAAC,EACXC,EAAc,QACdC,EAAmB,kBACnBC,EAAoB,iBACpBC,EAAc,CACZ,KAAQ,OACR,WAAc,CACZ,KAAQ,sDACR,KAAQ,WAchB,SAASC,EAAQC,GACf,MAA+C,mBAAxCC,OAAOC,UAAUC,SAASC,KAAKJ,EACxC,CAgBA,SAASK,EAAOC,EAAaC,GAC3B,IAAK,IAAIC,KAAKD,EACRA,EAAOE,eAAeD,KACxBF,EAAYE,GAAKD,EAAOC,IAG5B,OAAOF,CACT,CAKA,SAASI,EAAiBC,GACxB,GAAGA,EAAQC,KACT,OAAQD,EAAQC,MACd,IAAK,QACH,MAAO,CAAED,EAAQE,YAAY,GAAIF,EAAQE,YAAY,GAAIF,EAAQE,YAAY,GAAIF,EAAQE,YAAY,IAEvG,IAAK,aAGL,IAAK,aACH,OAAOC,EAAyBH,EAAQE,aAE1C,IAAK,kBAGL,IAAK,UACH,OAAOE,EAAgCJ,EAAQE,aAEjD,IAAK,eACH,OAiFR,SAAiDG,GAG/C,IAFA,IAAIC,EAAK,KAAMC,EAAK,KAAMC,EAAK,KAAMC,EAAK,KAEjCC,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IAGhC,IAFA,IAAIE,EAAQP,EAAMK,GAETG,EAAI,EAAGA,EAAID,EAAMD,OAAQE,IAEhC,IADA,IAAIC,EAAaF,EAAMC,GACdhB,EAAI,EAAGA,EAAIiB,EAAWH,OAAQd,IAAK,CAC1C,IAAIkB,EAASD,EAAWjB,GAEpBmB,EAAMD,EAAO,GACbE,EAAMF,EAAO,IAEN,OAAPT,GAEOU,EAAMV,KADfA,EAAKU,IAKI,OAAPT,GAEOS,EAAMT,KADfA,EAAKS,IAKI,OAAPR,GAEOS,EAAMT,KADfA,EAAKS,IAKI,OAAPR,GAEOQ,EAAMR,KADfA,EAAKQ,EAIT,CAIJ,MAAO,CAACX,EAAIE,EAAID,EAAIE,EACtB,CA3HeS,CAAuClB,EAAQE,aAExD,IAAK,UACH,OAAOF,EAAQmB,SAAUpB,EAAgBC,EAAQmB,UAAY,KAE/D,IAAK,oBACH,OAoKR,SAA6CC,GAE3C,IADA,IAAkBC,EAAdC,EAAU,GACLZ,EAAIU,EAAkBG,SAASZ,OAAS,EAAGD,GAAK,EAAGA,IAC1DW,EAAStB,EAAgBqB,EAAkBG,SAASb,GAAGS,UACvDG,EAAQE,KAAK,CAACH,EAAO,GAAGA,EAAO,KAC/BC,EAAQE,KAAK,CAACH,EAAO,GAAGA,EAAO,KAGjC,OAAOlB,EAAyBmB,EAClC,CA7KeG,CAAoCzB,GAE7C,IAAK,qBACH,OA+KR,SAA8C0B,GAG5C,IAFA,IAAkBL,EAAdC,EAAU,GAELZ,EAAIgB,EAAmBC,WAAWhB,OAAS,EAAGD,GAAK,EAAGA,IAC7DW,EAAStB,EAAgB2B,EAAmBC,WAAWjB,IACvDY,EAAQE,KAAK,CAACH,EAAO,GAAGA,EAAO,KAC/BC,EAAQE,KAAK,CAACH,EAAO,GAAGA,EAAO,KAGjC,OAAOlB,EAAyBmB,EAClC,CAzLeM,CAAqC5B,GAE9C,QACE,MAAM,IAAI6B,MAAM,iBAAmB7B,EAAQC,MAGjD,OAAO,IACT,CAgBA,SAASG,EAAiCC,GAGxC,IAFA,IAAIC,EAAK,KAAMC,EAAK,KAAMC,EAAK,KAAMC,EAAK,KAEjCC,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IAGhC,IAFA,IAAIE,EAAQP,EAAMK,GAETG,EAAI,EAAGA,EAAID,EAAMD,OAAQE,IAAK,CACrC,IAAIE,EAASH,EAAMC,GAEfG,EAAMD,EAAO,GACbE,EAAMF,EAAO,IAEN,OAAPT,GAEOU,EAAMV,KADfA,EAAKU,IAKI,OAAPT,GAEOS,EAAMT,KADfA,EAAKS,IAKI,OAAPR,GAEOS,EAAMT,KADfA,EAAKS,IAKI,OAAPR,GAEOQ,EAAMR,KADfA,EAAKQ,EAIT,CAGF,MAAO,CAACX,EAAIE,EAAID,EAAIE,EACtB,CA4DA,SAASN,EAA0BE,GAGjC,IAFA,IAAIC,EAAK,KAAMC,EAAK,KAAMC,EAAK,KAAMC,EAAK,KAEjCC,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IAAK,CACrC,IAAIK,EAASV,EAAMK,GACfM,EAAMD,EAAO,GACbE,EAAMF,EAAO,IAEN,OAAPT,GAEOU,EAAMV,KADfA,EAAKU,IAKI,OAAPT,GAEOS,EAAMT,KADfA,EAAKS,IAKI,OAAPR,GAEOS,EAAMT,KADfA,EAAKS,IAKI,OAAPR,GAEOQ,EAAMR,KADfA,EAAKQ,EAIT,CAEA,MAAO,CAACX,EAAIE,EAAID,EAAIE,EACtB,CA+BA,SAASqB,EAAkB9B,GACzB,IAAI+B,EAAShC,EAAgBC,GAC7B,MAAO,CACLgC,EAAGD,EAAO,GACVE,EAAGF,EAAO,GACVG,EAAGC,KAAKC,IAAIL,EAAO,GAAKA,EAAO,IAC/BM,EAAGF,KAAKC,IAAIL,EAAO,GAAKA,EAAO,IAEnC,CAKA,SAASO,EAASC,GAChB,OAAOA,EAAMtD,CACf,CAKA,SAASuD,EAASC,GAChB,OAAOA,EAAMvD,CACf,CAKA,SAASwD,EAAaxC,EAAayC,GACjC,IAAK,IAAIjC,EAAI,EAAGA,EAAIR,EAAYS,OAAQD,IAEN,kBAAtBR,EAAYQ,GAAG,KACvBR,EAAYQ,GAAKiC,EAAKzC,EAAYQ,KAGP,kBAAnBR,EAAYQ,KACpBR,EAAYQ,GAAKgC,EAAaxC,EAAYQ,GAAIiC,IAGlD,OAAOzC,CACT,CAKA,SAAS0C,EAAqBC,GAC5B,IAAIb,EAAIa,EAAS,GACbZ,EAAIY,EAAS,GACjB,MAAO,CAACP,EAASN,EAAIhD,GAAsE,IAAtDmD,KAAKW,OAAOR,EAASN,EAAIhD,GAAe,KAAO,KAAasD,EAAUH,KAAKY,GAAK,EAAM,EAAIZ,KAAKa,KAAKb,KAAKc,KAAK,EAAMhB,EAAIjD,KAC/J,CAKA,SAASkE,EAAmBL,GAC1B,IAAIM,EAAMN,EAAS,GACf5B,EAAMkB,KAAKiB,IAAIjB,KAAKkB,IAAIR,EAAS,GAAI,WAAY,UACrD,MAAO,CAACL,EAASW,GAAOnE,EAAaA,EAAY,EAAMmD,KAAKmB,KAAM,EAAMnB,KAAKoB,IAAIf,EAASvB,MAAU,EAAMkB,KAAKoB,IAAIf,EAASvB,MAC9H,CAKA,SAASuC,EAAexD,EAASyD,EAAWC,GAC1C,GAAoB,UAAjB1D,EAAQC,KACTD,EAAQE,YAAcuD,EAAUzD,EAAQE,kBACnC,GAAoB,YAAjBF,EAAQC,KAChBD,EAAQmB,SAAWqC,EAAexD,EAAQmB,SAAUsC,GAAW,QAC1D,GAAoB,sBAAjBzD,EAAQC,KAChB,IAAK,IAAI0D,EAAI,EAAGA,EAAI3D,EAAQuB,SAASZ,OAAQgD,IAC3C3D,EAAQuB,SAASoC,GAAKH,EAAexD,EAAQuB,SAASoC,GAAIF,GAAW,QAElE,GAAoB,uBAAjBzD,EAAQC,KAChB,IAAK,IAAI2D,EAAI,EAAGA,EAAI5D,EAAQ2B,WAAWhB,OAAQiD,IAC7C5D,EAAQ2B,WAAWiC,GAAKJ,EAAexD,EAAQ2B,WAAWiC,GAAIH,GAAW,QAG3EzD,EAAQE,YAAcwC,EAAa1C,EAAQE,YAAauD,GAa1D,OAVIC,GACCD,IAAcP,IACflD,EAAQ6D,IAAM1E,GAIfsE,IAAcb,UACR5C,EAAQ6D,IAGV7D,CACT,CAKA,SAAS8D,EAAW9D,GAClB,OAAOwD,EAAexD,EAASkD,EACjC,CAKA,SAASa,EAAa/D,GACpB,OAAOwD,EAAexD,EAAS4C,EACjC,CAmBA,SAASoB,EAASC,EAAIC,GACpB,OAAID,EAAG,GAAKC,EAAG,IACL,EACCD,EAAG,GAAKC,EAAG,GACb,EACED,EAAG,GAAKC,EAAG,IACZ,EACCD,EAAG,GAAKC,EAAG,GACb,EAEA,CAEX,CAMA,SAASC,EAAKC,EAAGC,EAAGC,GAElB,OAjCWC,GAiCCF,EAAE,GAAKD,EAAE,KAAOE,EAAE,GAAKF,EAAE,KAAOE,EAAE,GAAKF,EAAE,KAAOC,EAAE,GAAKD,EAAE,MAjCvDI,EAiC4D,IA/BhE,EACAD,EAAIC,EACL,EAEA,EANX,IAAaD,EAAGC,CAkChB,CAKA,SAASC,EAAkBL,EAAGC,GAE5B,IAAIK,EAAKL,EAAE,GAAKD,EAAE,GACdO,EAAKN,EAAE,GAAKD,EAAE,GAElB,OAAOM,EAAKA,EAAKC,EAAKA,CACxB,CAEA,SAASC,EAAcC,EAAQT,GAE7B,IAAIC,EAAID,EACR,IAAI,IAAIE,KAAKO,EAAQ,CACnB,IAAIC,EAAIX,EAAKC,EAAGC,EAAGQ,EAAOP,MAChB,IAAPQ,GAAkB,IAANA,GAAWL,EAAkBL,EAAGS,EAAOP,IAAMG,EAAkBL,EAAGC,MAC/EA,EAAIQ,EAAOP,GAEf,CACA,OAAOD,CACT,CAEA,SAASU,EAAWF,GAIlB,GAAqB,IAAlBA,EAAOlE,OACR,MAAO,GACF,GAAqB,IAAlBkE,EAAOlE,OACf,OAAOkE,EAMT,IAFA,IAAIG,EAAO,CAACH,EAAOI,KAAKjB,GAAU,IAE1BI,EAAI,EAAGA,EAAIY,EAAKrE,OAAQyD,IAAK,CACnC,IAAIC,EAAIO,EAAcC,EAAQG,EAAKZ,IAEhCC,IAAMW,EAAK,IACZA,EAAKxD,KAAK6C,EAEd,CAEA,OAAOW,CACT,CA8BA,SAASE,EAAwBhF,EAAaiF,GAE5C,IADA,IAAIC,GAAW,EACP1E,GAAK,EAAG2E,EAAInF,EAAYS,OAAQE,EAAIwE,EAAI,IAAK3E,EAAI2E,EAAGxE,EAAIH,GACxDR,EAAYQ,GAAG,IAAMyE,EAAM,IAAMA,EAAM,GAAKjF,EAAYW,GAAG,IAC3DX,EAAYW,GAAG,IAAMsE,EAAM,IAAMA,EAAM,GAAKjF,EAAYQ,GAAG,KAC5DyE,EAAM,IAAMjF,EAAYW,GAAG,GAAKX,EAAYQ,GAAG,KAAOyE,EAAM,GAAKjF,EAAYQ,GAAG,KAAOR,EAAYW,GAAG,GAAKX,EAAYQ,GAAG,IAAMR,EAAYQ,GAAG,KAClJ0E,GAAYA,GAGhB,OAAOA,CACT,CAEA,SAASE,EAAqBC,EAASJ,GACrC,GAAII,GAAWA,EAAQ5E,OAAQ,CAC7B,GAAuB,IAAnB4E,EAAQ5E,OACV,OAAOuE,EAAwBK,EAAQ,GAAIJ,GAE3C,GAAID,EAAwBK,EAAQ,GAAIJ,GAAQ,CAC9C,IAAK,IAAIzE,EAAI,EAAGA,EAAI6E,EAAQ5E,OAAQD,IAClC,GAAIwE,EAAwBK,EAAQ7E,GAAIyE,GACtC,OAAO,EAIX,OAAO,CACT,CACE,OAAO,CAGb,CACE,OAAO,CAEX,CAEA,SAASK,EAAmBC,EAAIC,EAAIC,EAAIC,GACtC,IAAIC,GAAQD,EAAG,GAAKD,EAAG,KAAOF,EAAG,GAAKE,EAAG,KAAOC,EAAG,GAAKD,EAAG,KAAOF,EAAG,GAAKE,EAAG,IACzEG,GAAQJ,EAAG,GAAKD,EAAG,KAAOA,EAAG,GAAKE,EAAG,KAAOD,EAAG,GAAKD,EAAG,KAAOA,EAAG,GAAKE,EAAG,IACzEI,GAAQH,EAAG,GAAKD,EAAG,KAAOD,EAAG,GAAKD,EAAG,KAAOG,EAAG,GAAKD,EAAG,KAAOD,EAAG,GAAKD,EAAG,IAE7E,GAAa,IAARM,EAAY,CACf,IAAIC,EAAKH,EAAOE,EACZE,EAAKH,EAAOC,EAEhB,GAAK,GAAKC,GAAMA,GAAM,GAAK,GAAKC,GAAMA,GAAM,EAC1C,OAAO,CAEX,CAEA,OAAO,CACT,CAEA,SAASC,EAASC,GAChB,OAAQC,MAAMC,WAAWF,KAAOG,SAASH,EAC3C,CAEA,SAASI,EAAsBhC,EAAGC,GAChC,GAAI0B,EAAS3B,EAAE,GAAG,KAChB,GAAI2B,EAAS1B,EAAE,GAAG,KAChB,IAAK,IAAI9D,EAAI,EAAGA,EAAI6D,EAAE5D,OAAS,EAAGD,IAChC,IAAK,IAAIG,EAAI,EAAGA,EAAI2D,EAAE7D,OAAS,EAAGE,IAChC,GAAI2E,EAAmBjB,EAAE7D,GAAI6D,EAAE7D,EAAI,GAAI8D,EAAE3D,GAAI2D,EAAE3D,EAAI,IACjD,OAAO,OAKb,IAAK,IAAIhB,EAAI,EAAGA,EAAI2E,EAAE7D,OAAQd,IAC5B,GAAI0G,EAAsBhC,EAAGC,EAAE3E,IAC7B,OAAO,OAKb,IAAK,IAAIwF,EAAI,EAAGA,EAAId,EAAE5D,OAAQ0E,IAC5B,GAAIkB,EAAsBhC,EAAEc,GAAIb,GAC9B,OAAO,EAIb,OAAO,CACT,CAKA,SAASgC,EAActG,GAGrB,IAFA,IAAIuG,EAAQ,GAEH/F,EAAI,EAAGA,EAAIR,EAAYS,OAAQD,IAAK,CAC3C,IAAIE,EAAQV,EAAYQ,GAAGgG,SAC4B,IAAnDC,EAAY/F,EAAM,GAAIA,EAAMA,EAAMD,OAAS,KAC7CC,EAAMY,KAAKZ,EAAM,IAGnB6F,EAAMjF,KAAKZ,EACb,CAEA,OAAO6F,CACT,CAEA,SAASE,EAAYpC,EAAGC,GACtB,IAAK,IAAI9D,EAAI,EAAGA,EAAI6D,EAAE5D,OAAQD,IAE5B,GAAI6D,EAAE7D,KAAO8D,EAAE9D,GACb,OAAO,EAIX,OAAO,CACT,CAEA,SAASkG,EAAiBrC,EAAGC,GAC3B,GAAID,EAAE5D,SAAW6D,EAAE7D,OACjB,OAAO,EAMT,IAHA,IAAIkG,EAAKtC,EAAEmC,QAAQzB,KAAKjB,GACpB8C,EAAKtC,EAAEkC,QAAQzB,KAAKjB,GAEftD,EAAI,EAAGA,EAAImG,EAAGlG,OAAQD,IAAK,CAClC,GAAImG,EAAGnG,GAAGC,SAAWmG,EAAGpG,GAAGC,OACzB,OAAO,EAET,IAAK,IAAIE,EAAI,EAAGA,EAAIgG,EAAGlG,OAAQE,IAC7B,GAAIgG,EAAGnG,GAAGG,KAAOiG,EAAGpG,GAAGG,GACrB,OAAO,CAGb,CAEA,OAAO,CACT,CAKA,IAAIkG,EAAkB,CAAC,UAKvB,SAASC,EAAUhH,GACjB,GAAGA,EACD,OAAQA,EAAQC,MAChB,IAAK,QACH,OAAO,IAAIgH,EAAMjH,GAEnB,IAAK,aACH,OAAO,IAAIkH,EAAWlH,GAExB,IAAK,aACH,OAAO,IAAImH,EAAWnH,GAExB,IAAK,kBACH,OAAO,IAAIoH,EAAgBpH,GAE7B,IAAK,UACH,OAAO,IAAIqH,EAAQrH,GAErB,IAAK,eACH,OAAO,IAAIsH,EAAatH,GAE1B,IAAK,UACH,OAAO,IAAIuH,EAAQvH,GAErB,IAAK,oBACH,OAAO,IAAIwH,EAAkBxH,GAE/B,IAAK,qBACH,OAAO,IAAIyH,EAAmBzH,GAEhC,QACE,MAAM,IAAI6B,MAAM,iBAAmB7B,EAAQC,MAGjD,CAiTA,SAASgH,EAAMS,GACb,IAAIC,EAAOC,MAAMrI,UAAUmH,MAAMjH,KAAKoI,WAEtC,GAAGH,GAAwB,UAAfA,EAAMzH,MAAoByH,EAAMxH,YAC1CR,EAAOZ,KAAM4I,QACR,GAAGA,GAAStI,EAAQsI,GACzB5I,KAAKoB,YAAcwH,MACd,MAAGC,EAAKhH,QAAU,GAGvB,KAAM,mDAFN7B,KAAKoB,YAAcyH,CAGrB,CAEA7I,KAAKmB,KAAO,OACd,CAcA,SAASiH,EAAWQ,GAClB,GAAGA,GAAwB,eAAfA,EAAMzH,MAAyByH,EAAMxH,YAC/CR,EAAOZ,KAAM4I,OACR,KAAGtI,EAAQsI,GAGhB,KAAM,wDAFN5I,KAAKoB,YAAcwH,CAGrB,CAEA5I,KAAKmB,KAAO,YACd,CAuCA,SAASkH,EAAWO,GAClB,GAAGA,GAAwB,eAAfA,EAAMzH,MAAyByH,EAAMxH,YAC/CR,EAAOZ,KAAM4I,OACR,KAAGtI,EAAQsI,GAGhB,KAAM,wDAFN5I,KAAKoB,YAAcwH,CAGrB,CAEA5I,KAAKmB,KAAO,YACd,CA0BA,SAASmH,EAAgBM,GACvB,GAAGA,GAAwB,oBAAfA,EAAMzH,MAA8ByH,EAAMxH,YACpDR,EAAOZ,KAAM4I,OACR,KAAGtI,EAAQsI,GAGhB,KAAM,6DAFN5I,KAAKoB,YAAcwH,CAGrB,CAEA5I,KAAKmB,KAAO,iBACd,CAsBA,SAASoH,EAAQK,GACf,GAAGA,GAAwB,YAAfA,EAAMzH,MAAsByH,EAAMxH,YAC5CR,EAAOZ,KAAM4I,OACR,KAAGtI,EAAQsI,GAGhB,KAAM,qDAFN5I,KAAKoB,YAAcwH,CAGrB,CAEA5I,KAAKmB,KAAO,SACd,CAyCA,SAASqH,EAAaI,GACpB,GAAGA,GAAwB,iBAAfA,EAAMzH,MAA2ByH,EAAMxH,YACjDR,EAAOZ,KAAM4I,OACR,KAAGtI,EAAQsI,GAGhB,KAAM,0DAFN5I,KAAKoB,YAAcwH,CAGrB,CAEA5I,KAAKmB,KAAO,cACd,CAoCA,SAASsH,EAAQG,GACf,GAAGA,GAAwB,YAAfA,EAAMzH,KAChBP,EAAOZ,KAAM4I,OACR,MAAGA,GAASA,EAAMzH,MAAQyH,EAAMxH,aAGrC,KAAM,qDAFNpB,KAAKqC,SAAWuG,CAGlB,CAEA5I,KAAKmB,KAAO,SACd,CAcA,SAASuH,EAAkBE,GACzB,GAAGA,GAAwB,sBAAfA,EAAMzH,MAAgCyH,EAAMnG,SACtD7B,EAAOZ,KAAM4I,OACR,KAAGtI,EAAQsI,GAGhB,KAAM,+DAFN5I,KAAKyC,SAAWmG,CAGlB,CAEA5I,KAAKmB,KAAO,mBACd,CA4BA,SAASwH,EAAmBC,GAC1B,GAAGA,GAAwB,uBAAfA,EAAMzH,MAAiCyH,EAAM/F,WACvDjC,EAAOZ,KAAM4I,QACR,GAAGtI,EAAQsI,GAChB5I,KAAK6C,WAAa+F,MACb,KAAGA,EAAMxH,cAAewH,EAAMzH,KAInC,KAAM,gEAHNnB,KAAKmB,KAAO,qBACZnB,KAAK6C,WAAa,CAAC+F,EAGrB,CAEA5I,KAAKmB,KAAO,oBACd,CAaA,SAAS6H,EAAaC,EAAQC,EAAQC,GAOpC,IANA,IAAIC,EAAmBhF,EAAmB6E,GACtCI,EAAQF,GAAe,GACvB1C,EAAU,CACZtF,KAAM,UACNC,YAAa,CAAC,KAERQ,EAAE,EAAGA,GAAGyH,EAAOzH,IAAK,CAC1B,IAAI0H,EAAU1H,GAAK,IAAIyH,GAAShG,KAAKY,GAAK,IAC1CwC,EAAQrF,YAAY,GAAGsB,KAAK,CAAC0G,EAAiB,GAAKF,EAAS7F,KAAKkG,IAAID,GAAUF,EAAiB,GAAKF,EAAS7F,KAAKoB,IAAI6E,IACzH,CAGA,OAFA7C,EAAQrF,YAAcsG,EAAcjB,EAAQrF,aAErC6D,EAAawB,EACtB,CAEA,SAAS+C,EAAQP,EAAQC,EAAQC,GAC/B,IAAIE,EAAQF,GAAe,GACvB1F,EAAMyF,GAAU,IAEpB,IAAID,GAAUA,EAAOpH,OAAS,IAAM4B,IAAQ4F,EAC1C,MAAM,IAAItG,MAAM,yDAGlBnC,EAAOZ,KAAM,IAAIyI,EAAQ,CACvBtH,KAAM,UACNkB,SAAU2G,EAAaC,EAAQxF,EAAK4F,GACpCI,WAAY,CACVP,OAAQzF,EACRwF,OAAQA,EACRI,MAAOA,KAGb,CAwEA,OAluBAnB,EAAUzH,UAAUuE,WAAa,WAC/B,OAAOA,EAAWhF,KACpB,EAEAkI,EAAUzH,UAAUwE,aAAe,WACjC,OAAOA,EAAajF,KACtB,EAEAkI,EAAUzH,UAAUiJ,SAAW,WAC7B,OAAO1G,EAAkBhD,KAC3B,EAEAkI,EAAUzH,UAAUkJ,KAAO,WACzB,OAAO1I,EAAgBjB,KACzB,EAEAkI,EAAUzH,UAAUwF,WAAa,WAC/B,IAAuBrE,EAAGG,EAAtBX,EAAc,GAClB,GAAkB,UAAdpB,KAAKmB,KACP,OAAO,KACF,GAAkB,eAAdnB,KAAKmB,MAAuC,eAAdnB,KAAKmB,KAAuB,CACnE,KAAInB,KAAKoB,aAAepB,KAAKoB,YAAYS,QAAU,GAGjD,OAAO,KAFPT,EAAcpB,KAAKoB,WAIvB,MAAO,GAAkB,YAAdpB,KAAKmB,MAAoC,oBAAdnB,KAAKmB,KAA4B,CACrE,KAAInB,KAAKoB,aAAepB,KAAKoB,YAAYS,OAAS,GAQhD,OAAO,KAPP,IAAKD,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IACvCR,EAAcA,EAAYwI,OAAO5J,KAAKoB,YAAYQ,IAEpD,GAAGR,EAAYS,OAAS,EACtB,OAAO,IAKb,MAAO,GAAkB,iBAAd7B,KAAKmB,KAAyB,CACvC,KAAInB,KAAKoB,aAAepB,KAAKoB,YAAYS,OAAS,GAUhD,OAAO,KATP,IAAKD,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IACvC,IAAKG,EAAI,EAAGA,EAAI/B,KAAKoB,YAAYQ,GAAGC,OAAQE,IAC1CX,EAAcA,EAAYwI,OAAO5J,KAAKoB,YAAYQ,GAAGG,IAGzD,GAAGX,EAAYS,OAAS,EACtB,OAAO,IAKb,MAAO,GAAiB,YAAd7B,KAAKmB,KAEb,OADgB,IAAI+G,EAAUlI,KAAKqC,UAClB4D,aAGnB,OAAO,IAAIsC,EAAQ,CACjBpH,KAAM,UACNC,YAAasG,EAAc,CAACzB,EAAW7E,MAE3C,EAEA8G,EAAUzH,UAAUoJ,OAAS,WAC3B,IAAItJ,EAAM,CAAC,EACX,IAAK,IAAIuJ,KAAO9J,KACVA,KAAKgB,eAAe8I,KAA0C,IAAlC7B,EAAgB8B,QAAQD,KACtDvJ,EAAIuJ,GAAO9J,KAAK8J,IAIpB,OADAvJ,EAAIoJ,KAAO1I,EAAgBjB,MACpBO,CACT,EAEA2H,EAAUzH,UAAU6F,SAAW,SAAS0D,GACtC,OAAO,IAAI9B,EAAU8B,GAAWC,OAAOjK,KACzC,EAEAkI,EAAUzH,UAAUwJ,OAAS,SAASD,GACpC,IAAiBpI,EAAGG,EAAGuE,EAQvB,GALuB,YAAnB0D,EAAU7I,OACZ6I,EAAYA,EAAU3H,UAID,UAAnB2H,EAAU7I,MACM,UAAdnB,KAAKmB,KACP,OAAO0G,EAAY7H,KAAKoB,YAAa4I,EAAU5I,aAMnD,GAAuB,oBAAnB4I,EAAU7I,MACM,UAAdnB,KAAKmB,KACP,IAAKS,EAAI,EAAGA,EAAIoI,EAAU5I,YAAYS,OAAQD,IAAK,CACjD,IAAIsI,EAAa,CAAE/I,KAAM,aAAcC,YAAa4I,EAAU5I,YAAYQ,IAE1E,GAAI5B,KAAKiK,OAAOC,GACd,OAAO,CAEX,CAKJ,IAAuB,eAAnBF,EAAU7I,MAA4C,eAAnB6I,EAAU7I,OAC7B,UAAdnB,KAAKmB,KACP,IAAKS,EAAI,EAAGA,EAAIoI,EAAU5I,YAAYS,OAAQD,IAAK,CACjD,GAAI5B,KAAKoB,YAAYS,SAAWmI,EAAU5I,YAAYQ,GAAGC,OACvD,OAAO,EAGT,GAAIgG,EAAY7H,KAAKoB,YAAa4I,EAAU5I,YAAYQ,IACtD,OAAO,CAEX,CAIJ,GAAuB,YAAnBoI,EAAU7I,KAAoB,CAEhC,GAAkB,YAAdnB,KAAKmB,KAAoB,CAE3B,GAAI6I,EAAU5I,YAAYS,SAAW7B,KAAKoB,YAAYS,OACpD,IAAKD,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IACvC,GAAIkG,EAAiB9H,KAAKoB,YAAYQ,GAAIoI,EAAU5I,YAAYQ,IAC9D,OAAO,EAKb,SAAI5B,KAAKoB,YAAYS,SAAU2E,EAAqBwD,EAAU5I,YAAapB,KAAKoB,YAAY,GAAG,OACrFqG,EAAsBC,EAAc1H,KAAKoB,aAAcsG,EAAcsC,EAAU5I,aAM3F,CAAO,GAAkB,UAAdpB,KAAKmB,KACd,OAAOqF,EAAqBwD,EAAU5I,YAAapB,KAAKoB,aAGnD,GAAkB,eAAdpB,KAAKmB,MAAuC,eAAdnB,KAAKmB,KAAuB,CACnE,IAAKnB,KAAKoB,aAA2C,IAA5BpB,KAAKoB,YAAYS,OACxC,OAAO,EAGT,IAAKD,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IACvC,IAAyE,IAArE4E,EAAqBwD,EAAU5I,YAAapB,KAAKoB,YAAYQ,IAC/D,OAAO,EAIX,OAAO,CAGT,CAAO,GAAkB,oBAAd5B,KAAKmB,KAA4B,CAC1C,IAAKS,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IAGvC,IAA6B,IAFpB,IAAIyG,EAAWrI,KAAKoB,YAAYQ,IAElCqI,OAAOD,GAEZ,OADA1D,KACO,EAIX,OAAO,CAGT,CAAO,GAAkB,iBAAdtG,KAAKmB,KAAyB,CACvC,IAAKS,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IAGvC,IAA6B,IAFpB,IAAIsG,EAAU,CAAE/G,KAAM,UAAWC,YAAapB,KAAKoB,YAAYQ,KAEjEqI,OAAOD,GACZ,OAAO,EAIX,OAAO,CACT,CAEF,CAEA,GAAuB,iBAAnBA,EAAU7I,KAAyB,CAErC,GAAkB,UAAdnB,KAAKmB,KAAkB,CACzB,GAAI6I,EAAU5I,YAAYS,OACxB,IAAKD,EAAI,EAAGA,EAAIoI,EAAU5I,YAAYS,OAAQD,IAE5C,GAAI4E,EADUwD,EAAU5I,YAAYQ,GACE5B,KAAKoB,eAAqF,IAArEqG,EAAsB,CAACzH,KAAKoB,aAAc4I,EAAU5I,aAC7G,OAAO,EAKb,OAAO,CAET,CAAO,GAAkB,YAAdpB,KAAKmB,KAAoB,CAClC,IAAKS,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IACvC,GAAIoI,EAAU5I,YAAYQ,GAAGC,SAAW7B,KAAKoB,YAAYS,OACvD,IAAKE,EAAI,EAAGA,EAAI/B,KAAKoB,YAAYS,OAAQE,IACvC,GAAI+F,EAAiB9H,KAAKoB,YAAYW,GAAIiI,EAAU5I,YAAYQ,GAAGG,IACjE,OAAO,EAMf,IAAuE,IAAnE0F,EAAsBzH,KAAKoB,YAAa4I,EAAU5I,cAChD4I,EAAU5I,YAAYS,OAAQ,CAChC,IAAKD,EAAI,EAAGA,EAAIoI,EAAU5I,YAAYS,OAAQD,IAG1C0E,GADgE,IAA9DE,EADUwD,EAAU5I,YAAYQ,GACE5B,KAAKoB,YAAY,GAAG,IAO5D,OAAOkF,CACT,CAIJ,MAAO,GAAkB,eAAdtG,KAAKmB,MAAuC,eAAdnB,KAAKmB,KAC5C,IAAKS,EAAI,EAAGA,EAAIoI,EAAU5I,YAAYS,OAAQD,IAAK,CACjD,IAAI0D,EAAI,CAAEnE,KAAM,UAAWC,YAAa4I,EAAU5I,YAAYQ,IAE9D,QAAI5B,KAAKiK,OAAO3E,EAKlB,KAGK,IAAkB,oBAAdtF,KAAKmB,KAA4B,CAC1C,IAAKS,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IAGvC,IAAgC,IAFpB,IAAIyG,EAAWrI,KAAKoB,YAAYQ,IAElCqI,OAAOD,GACf,OAAO,EAIX,OAAO,CAGT,CAAO,GAAkB,iBAAdhK,KAAKmB,KAAyB,CACvC,IAAKS,EAAI,EAAGA,EAAIoI,EAAU5I,YAAYS,OAAQD,IAAK,CACjD,IAAIuI,EAAQ,CAAEhJ,KAAM,UAAWC,YAAa4I,EAAU5I,YAAYQ,IAElE,IAA2B,IAAvB5B,KAAKiK,OAAOE,GACd,OAAO,CAEX,CAEA,OAAO,CACT,EACF,CAGA,OAAO,CACT,EAEAjC,EAAUzH,UAAU2J,WAAa,SAASJ,GAEjB,YAAnBA,EAAU7I,OACZ6I,EAAYA,EAAU3H,UAGxB,IAAIiD,EAAI,IAAI4C,EAAU8B,GACtB,SAAIhK,KAAKiK,OAAOD,KAAc1E,EAAE2E,OAAOjK,SAKrB,UAAdA,KAAKmB,MAAkC,eAAdnB,KAAKmB,MACX,UAAnB6I,EAAU7I,MAAuC,eAAnB6I,EAAU7I,KACnCsG,EAAsBzH,KAAKoB,YAAa4I,EAAU5I,aAClC,YAAdpB,KAAKmB,KAEF,IAAI+G,EAAUlI,KAAKqC,UAClB+H,WAAWJ,IAx5B5B,WACE,IAAInB,EAAOC,MAAMrI,UAAUmH,MAAMyC,MAAMtB,gBAEhBuB,WAAZC,SAAyBA,QAAQC,MAC1CD,QAAQC,KAAKH,MAAME,QAAS1B,EAEhC,CAq5BE2B,CAAK,QAAUxK,KAAKmB,KAAO,OAAS6I,EAAU7I,KAAO,iDAC9C,GACT,EA8BAgH,EAAM1H,UAAY,IAAIyH,EACtBC,EAAM1H,UAAUgK,YAActC,EAuB9BC,EAAW3H,UAAY,IAAIyH,EAC3BE,EAAW3H,UAAUgK,YAAcrC,EACnCA,EAAW3H,UAAUiK,QAAU,SAAS7G,GACtC,IAAK,IAAIjC,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IAC3CiC,EAAKwG,MAAMrK,KAAM,CAACA,KAAKoB,YAAYQ,GAAIA,EAAG5B,KAAKoB,cAEjD,OAAOpB,IACT,EACAoI,EAAW3H,UAAUkK,SAAW,SAAStE,GAEvC,OADArG,KAAKoB,YAAYsB,KAAK2D,GACfrG,IACT,EACAoI,EAAW3H,UAAUmK,YAAc,SAASvE,EAAOwE,GAEjD,OADA7K,KAAKoB,YAAY0J,OAAOD,EAAO,EAAGxE,GAC3BrG,IACT,EACAoI,EAAW3H,UAAUsK,YAAc,SAASC,GAM1C,MALqB,kBAAXA,EACRhL,KAAKoB,YAAY0J,OAAOE,EAAQ,GAEhChL,KAAKoB,YAAY0J,OAAO9K,KAAKoB,YAAY2I,QAAQiB,GAAS,GAErDhL,IACT,EACAoI,EAAW3H,UAAUwK,IAAM,SAASrJ,GAClC,OAAO,IAAIuG,EAAMnI,KAAKoB,YAAYQ,GACpC,EAuBAyG,EAAW5H,UAAY,IAAIyH,EAC3BG,EAAW5H,UAAUgK,YAAcpC,EACnCA,EAAW5H,UAAUyK,UAAY,SAAS7E,GAExC,OADArG,KAAKoB,YAAYsB,KAAK2D,GACfrG,IACT,EACAqI,EAAW5H,UAAU0K,aAAe,SAAS9E,EAAOwE,GAElD,OADA7K,KAAKoB,YAAY0J,OAAOD,EAAO,EAAGxE,GAC3BrG,IACT,EACAqI,EAAW5H,UAAU2K,aAAe,SAASJ,GAE3C,OADAhL,KAAKoB,YAAY0J,OAAOE,EAAQ,GACzBhL,IACT,EAuBAsI,EAAgB7H,UAAY,IAAIyH,EAChCI,EAAgB7H,UAAUgK,YAAcnC,EACxCA,EAAgB7H,UAAUiK,QAAU,SAAS7G,GAC3C,IAAK,IAAIjC,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IAC3CiC,EAAKwG,MAAMrK,KAAM,CAACA,KAAKoB,YAAYQ,GAAIA,EAAG5B,KAAKoB,aAEnD,EACAkH,EAAgB7H,UAAUwK,IAAM,SAASrJ,GACvC,OAAO,IAAIyG,EAAWrI,KAAKoB,YAAYQ,GACzC,EAuBA2G,EAAQ9H,UAAY,IAAIyH,EACxBK,EAAQ9H,UAAUgK,YAAclC,EAChCA,EAAQ9H,UAAUyK,UAAY,SAAS7E,GAErC,OADArG,KAAKmL,aAAa9E,EAAOrG,KAAKoB,YAAY,GAAGS,OAAS,GAC/C7B,IACT,EACAuI,EAAQ9H,UAAU0K,aAAe,SAAS9E,EAAOwE,GAE/C,OADA7K,KAAKoB,YAAY,GAAG0J,OAAOD,EAAO,EAAGxE,GAC9BrG,IACT,EACAuI,EAAQ9H,UAAU2K,aAAe,SAASJ,GAExC,OADAhL,KAAKoB,YAAY,GAAG0J,OAAOE,EAAQ,GAC5BhL,IACT,EACAuI,EAAQ9H,UAAU4K,MAAQ,WACxBrL,KAAKoB,YAAcsG,EAAc1H,KAAKoB,YACxC,EACAmH,EAAQ9H,UAAU6K,SAAW,WAC3B,OAAOtL,KAAKoB,YAAYS,OAAS,CACnC,EACA0G,EAAQ9H,UAAU8K,MAAQ,WACxB,IAAIA,EAAQ,GACZ,GAAIvL,KAAKsL,WACP,IAAK,IAAI1J,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IAC3C2J,EAAM7I,KAAK,IAAI6F,EAAQ,CAACvI,KAAKoB,YAAYQ,MAG7C,OAAO2J,CACT,EAuBA/C,EAAa/H,UAAY,IAAIyH,EAC7BM,EAAa/H,UAAUgK,YAAcjC,EACrCA,EAAa/H,UAAUiK,QAAU,SAAS7G,GACxC,IAAK,IAAIjC,EAAI,EAAGA,EAAI5B,KAAKoB,YAAYS,OAAQD,IAC3CiC,EAAKwG,MAAMrK,KAAM,CAACA,KAAKoB,YAAYQ,GAAIA,EAAG5B,KAAKoB,aAEnD,EACAoH,EAAa/H,UAAUwK,IAAM,SAASrJ,GACpC,OAAO,IAAI2G,EAAQvI,KAAKoB,YAAYQ,GACtC,EACA4G,EAAa/H,UAAU4K,MAAQ,WAC7B,IAAI1D,EAAQ,GAKZ,OAJA3H,KAAK0K,SAAQ,SAASjE,GACpBkB,EAAMjF,KAAKgF,EAAcjB,GAC3B,IACAzG,KAAKoB,YAAcuG,EACZ3H,IACT,EA6BAyI,EAAQhI,UAAY,IAAIyH,EACxBO,EAAQhI,UAAUgK,YAAchC,EAuBhCC,EAAkBjI,UAAY,IAAIyH,EAClCQ,EAAkBjI,UAAUgK,YAAc/B,EAC1CA,EAAkBjI,UAAUiK,QAAU,SAAS7G,GAC7C,IAAK,IAAIjC,EAAI,EAAGA,EAAI5B,KAAKyC,SAASZ,OAAQD,IACxCiC,EAAKwG,MAAMrK,KAAM,CAACA,KAAKyC,SAASb,GAAIA,EAAG5B,KAAKyC,UAEhD,EACAiG,EAAkBjI,UAAUwK,IAAM,SAASO,GACzC,IAAIC,EAMJ,OALAzL,KAAK0K,SAAQ,SAASgB,GACjBA,EAAQF,KAAOA,IAChBC,EAAQC,EAEZ,IACO,IAAIjD,EAAQgD,EACrB,EA0BA9C,EAAmBlI,UAAY,IAAIyH,EACnCS,EAAmBlI,UAAUgK,YAAc9B,EAC3CA,EAAmBlI,UAAUiK,QAAU,SAAS7G,GAC9C,IAAK,IAAIjC,EAAI,EAAGA,EAAI5B,KAAK6C,WAAWhB,OAAQD,IAC1CiC,EAAKwG,MAAMrK,KAAM,CAACA,KAAK6C,WAAWjB,GAAIA,EAAG5B,KAAK6C,YAElD,EACA8F,EAAmBlI,UAAUwK,IAAM,SAASrJ,GAC1C,OAAO,IAAIsG,EAAUlI,KAAK6C,WAAWjB,GACvC,EAqCA4H,EAAO/I,UAAY,IAAIyH,EACvBsB,EAAO/I,UAAUgK,YAAcjB,EAC/BA,EAAO/I,UAAUkL,YAAc,WAE7B,OADA3L,KAAKqC,SAAW2G,EAAahJ,KAAKyJ,WAAWR,OAAQjJ,KAAKyJ,WAAWP,OAAQlJ,KAAKyJ,WAAWJ,OACtFrJ,IACT,EACAwJ,EAAO/I,UAAUwI,OAAS,SAAS7H,GAKjC,OAJGA,IACDpB,KAAKyJ,WAAWR,OAAS7H,EACzBpB,KAAK2L,eAEA3L,KAAKyJ,WAAWR,MACzB,EACAO,EAAO/I,UAAUyI,OAAS,SAASA,GAKjC,OAJGA,IACDlJ,KAAKyJ,WAAWP,OAASA,EACzBlJ,KAAK2L,eAEA3L,KAAKyJ,WAAWP,MACzB,EACAM,EAAO/I,UAAU4I,MAAQ,SAASA,GAKhC,OAJGA,IACDrJ,KAAKyJ,WAAWJ,MAAQA,EACxBrJ,KAAK2L,eAEA3L,KAAKyJ,WAAWJ,KACzB,EAEAG,EAAO/I,UAAUoJ,OAAS,WAExB,OADa3B,EAAUzH,UAAUoJ,OAAOlJ,KAAKX,KAE/C,EAEAC,EAAQiI,UAAYA,EACpBjI,EAAQkI,MAAQA,EAChBlI,EAAQmI,WAAaA,EACrBnI,EAAQoI,WAAaA,EACrBpI,EAAQqI,gBAAkBA,EAC1BrI,EAAQsI,QAAUA,EAClBtI,EAAQuI,aAAeA,EACvBvI,EAAQwI,QAAUA,EAClBxI,EAAQyI,kBAAoBA,EAC5BzI,EAAQ0I,mBAAqBA,EAC7B1I,EAAQuJ,OAASA,EAEjBvJ,EAAQ+E,WAAaA,EACrB/E,EAAQgF,aAAeA,EAEvBhF,EAAQ2L,MAAQ,CAAC,EACjB3L,EAAQ2L,MAAMxH,mBAAqBA,EACnCnE,EAAQ2L,MAAM9H,qBAAuBA,EACrC7D,EAAQ2L,MAAMlH,eAAiBA,EAC/BzE,EAAQ2L,MAAM5G,WAAaA,EAC3B/E,EAAQ2L,MAAM3G,aAAeA,EAC7BhF,EAAQ2L,MAAM5C,aAAeA,EAE7B/I,EAAQ2L,MAAM3K,gBAAkBA,EAChChB,EAAQ2L,MAAM5I,kBAAoBA,EAElC/C,EAAQ2L,MAAMxF,wBAA0BA,EACxCnG,EAAQ2L,MAAMpF,qBAAuBA,EACrCvG,EAAQ2L,MAAMnE,sBAAwBA,EACtCxH,EAAQ2L,MAAMxF,wBAA0BA,EACxCnG,EAAQ2L,MAAM9D,iBAAmBA,EACjC7H,EAAQ2L,MAAM3F,WAAaA,EAC3BhG,EAAQ2L,MAAMC,SA16Bd,SAAkB9F,GAGhB,IAFA,IAAI+F,EAEKlK,EAAI,EAAGA,EAAImE,EAAOlE,OAAS,EAAGD,IAAK,CAC1C,IAAIuD,EAAKY,EAAOnE,GACZwD,EAAKW,EAAOnE,EAAI,GAChBmK,EAAKhG,EAAOnE,EAAI,GAChBoK,EAAI,CAAC5G,EAAG,GAAKD,EAAG,GAAIC,EAAG,GAAKD,EAAG,IAG/B8G,EAAMF,EAAG,GAAKC,EAAE,GAAKD,EAAG,GAAKC,EAAE,GAAKA,EAAE,GAAK7G,EAAG,GAAK6G,EAAE,GAAK7G,EAAG,GAEjE,GAAU,IAANvD,EAEAkK,EADEG,EAAM,OAMV,GAAIH,GAAQG,EAAM,IAAOH,GAAQG,EAAM,EACrC,OAAO,CAGb,CAEA,OAAO,CACT,EAk5BAhM,EAAQI,YAAcA,EACtBJ,EAAQiM,cA92CY,CACd,KAAQ,OACR,WAAc,CACZ,KAAQ,oDACR,KAAQ,WA42CTjM,CACT,EAx4C6D,kBAAnBkM,EAAOlM,UACnCkM,EAAOlM,QAAUF,KAIR,kBAAXqM,SACRtM,EAAKuM,YAActM,I","sources":["webpack://local-services-lookup/./node_modules/terraformer/terraformer.js"],"sourcesContent":["(function (root, factory) {\n\n  // Node.\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    exports = module.exports = factory();\n  }\n\n  // Browser Global.\n  if(typeof window === \"object\") {\n    root.Terraformer = factory();\n  }\n\n}(this, function(){\n  \"use strict\";\n\n  var exports = {},\n      EarthRadius = 6378137,\n      DegreesPerRadian = 57.295779513082320,\n      RadiansPerDegree =  0.017453292519943,\n      MercatorCRS = {\n        \"type\": \"link\",\n        \"properties\": {\n          \"href\": \"http://spatialreference.org/ref/sr-org/6928/ogcwkt/\",\n          \"type\": \"ogcwkt\"\n        }\n      },\n      GeographicCRS = {\n        \"type\": \"link\",\n        \"properties\": {\n          \"href\": \"http://spatialreference.org/ref/epsg/4326/ogcwkt/\",\n          \"type\": \"ogcwkt\"\n        }\n      };\n\n  /*\n  Internal: isArray function\n  */\n  function isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  }\n\n  /*\n  Internal: safe warning\n  */\n  function warn() {\n    var args = Array.prototype.slice.apply(arguments);\n\n    if (typeof console !== undefined && console.warn) {\n      console.warn.apply(console, args);\n    }\n  }\n\n  /*\n  Internal: Extend one object with another.\n  */\n  function extend(destination, source) {\n    for (var k in source) {\n      if (source.hasOwnProperty(k)) {\n        destination[k] = source[k];\n      }\n    }\n    return destination;\n  }\n\n  /*\n  Public: Calculate an bounding box for a geojson object\n  */\n  function calculateBounds (geojson) {\n    if(geojson.type){\n      switch (geojson.type) {\n        case 'Point':\n          return [ geojson.coordinates[0], geojson.coordinates[1], geojson.coordinates[0], geojson.coordinates[1]];\n\n        case 'MultiPoint':\n          return calculateBoundsFromArray(geojson.coordinates);\n\n        case 'LineString':\n          return calculateBoundsFromArray(geojson.coordinates);\n\n        case 'MultiLineString':\n          return calculateBoundsFromNestedArrays(geojson.coordinates);\n\n        case 'Polygon':\n          return calculateBoundsFromNestedArrays(geojson.coordinates);\n\n        case 'MultiPolygon':\n          return calculateBoundsFromNestedArrayOfArrays(geojson.coordinates);\n\n        case 'Feature':\n          return geojson.geometry? calculateBounds(geojson.geometry) : null;\n\n        case 'FeatureCollection':\n          return calculateBoundsForFeatureCollection(geojson);\n\n        case 'GeometryCollection':\n          return calculateBoundsForGeometryCollection(geojson);\n\n        default:\n          throw new Error(\"Unknown type: \" + geojson.type);\n      }\n    }\n    return null;\n  }\n\n  /*\n  Internal: Calculate an bounding box from an nested array of positions\n  [\n    [\n      [ [lng, lat],[lng, lat],[lng, lat] ]\n    ]\n    [\n      [lng, lat],[lng, lat],[lng, lat]\n    ]\n    [\n      [lng, lat],[lng, lat],[lng, lat]\n    ]\n  ]\n  */\n  function calculateBoundsFromNestedArrays (array) {\n    var x1 = null, x2 = null, y1 = null, y2 = null;\n\n    for (var i = 0; i < array.length; i++) {\n      var inner = array[i];\n\n      for (var j = 0; j < inner.length; j++) {\n        var lonlat = inner[j];\n\n        var lon = lonlat[0];\n        var lat = lonlat[1];\n\n        if (x1 === null) {\n          x1 = lon;\n        } else if (lon < x1) {\n          x1 = lon;\n        }\n\n        if (x2 === null) {\n          x2 = lon;\n        } else if (lon > x2) {\n          x2 = lon;\n        }\n\n        if (y1 === null) {\n          y1 = lat;\n        } else if (lat < y1) {\n          y1 = lat;\n        }\n\n        if (y2 === null) {\n          y2 = lat;\n        } else if (lat > y2) {\n          y2 = lat;\n        }\n      }\n    }\n\n    return [x1, y1, x2, y2 ];\n  }\n\n  /*\n  Internal: Calculate a bounding box from an array of arrays of arrays\n  [\n    [ [lng, lat],[lng, lat],[lng, lat] ]\n    [ [lng, lat],[lng, lat],[lng, lat] ]\n    [ [lng, lat],[lng, lat],[lng, lat] ]\n  ]\n  */\n  function calculateBoundsFromNestedArrayOfArrays (array) {\n    var x1 = null, x2 = null, y1 = null, y2 = null;\n\n    for (var i = 0; i < array.length; i++) {\n      var inner = array[i];\n\n      for (var j = 0; j < inner.length; j++) {\n        var innerinner = inner[j];\n        for (var k = 0; k < innerinner.length; k++) {\n          var lonlat = innerinner[k];\n\n          var lon = lonlat[0];\n          var lat = lonlat[1];\n\n          if (x1 === null) {\n            x1 = lon;\n          } else if (lon < x1) {\n            x1 = lon;\n          }\n\n          if (x2 === null) {\n            x2 = lon;\n          } else if (lon > x2) {\n            x2 = lon;\n          }\n\n          if (y1 === null) {\n            y1 = lat;\n          } else if (lat < y1) {\n            y1 = lat;\n          }\n\n          if (y2 === null) {\n            y2 = lat;\n          } else if (lat > y2) {\n            y2 = lat;\n          }\n        }\n      }\n    }\n\n    return [x1, y1, x2, y2];\n  }\n\n  /*\n  Internal: Calculate a bounding box from an array of positions\n  [\n    [lng, lat],[lng, lat],[lng, lat]\n  ]\n  */\n  function calculateBoundsFromArray (array) {\n    var x1 = null, x2 = null, y1 = null, y2 = null;\n\n    for (var i = 0; i < array.length; i++) {\n      var lonlat = array[i];\n      var lon = lonlat[0];\n      var lat = lonlat[1];\n\n      if (x1 === null) {\n        x1 = lon;\n      } else if (lon < x1) {\n        x1 = lon;\n      }\n\n      if (x2 === null) {\n        x2 = lon;\n      } else if (lon > x2) {\n        x2 = lon;\n      }\n\n      if (y1 === null) {\n        y1 = lat;\n      } else if (lat < y1) {\n        y1 = lat;\n      }\n\n      if (y2 === null) {\n        y2 = lat;\n      } else if (lat > y2) {\n        y2 = lat;\n      }\n    }\n\n    return [x1, y1, x2, y2 ];\n  }\n\n  /*\n  Internal: Calculate an bounding box for a feature collection\n  */\n  function calculateBoundsForFeatureCollection(featureCollection){\n    var extents = [], extent;\n    for (var i = featureCollection.features.length - 1; i >= 0; i--) {\n      extent = calculateBounds(featureCollection.features[i].geometry);\n      extents.push([extent[0],extent[1]]);\n      extents.push([extent[2],extent[3]]);\n    }\n\n    return calculateBoundsFromArray(extents);\n  }\n\n  /*\n  Internal: Calculate an bounding box for a geometry collection\n  */\n  function calculateBoundsForGeometryCollection(geometryCollection){\n    var extents = [], extent;\n\n    for (var i = geometryCollection.geometries.length - 1; i >= 0; i--) {\n      extent = calculateBounds(geometryCollection.geometries[i]);\n      extents.push([extent[0],extent[1]]);\n      extents.push([extent[2],extent[3]]);\n    }\n\n    return calculateBoundsFromArray(extents);\n  }\n\n  function calculateEnvelope(geojson){\n    var bounds = calculateBounds(geojson);\n    return {\n      x: bounds[0],\n      y: bounds[1],\n      w: Math.abs(bounds[0] - bounds[2]),\n      h: Math.abs(bounds[1] - bounds[3])\n    };\n  }\n\n  /*\n  Internal: Convert radians to degrees. Used by spatial reference converters.\n  */\n  function radToDeg(rad) {\n    return rad * DegreesPerRadian;\n  }\n\n  /*\n  Internal: Convert degrees to radians. Used by spatial reference converters.\n  */\n  function degToRad(deg) {\n    return deg * RadiansPerDegree;\n  }\n\n  /*\n  Internal: Loop over each array in a geojson object and apply a function to it. Used by spatial reference converters.\n  */\n  function eachPosition(coordinates, func) {\n    for (var i = 0; i < coordinates.length; i++) {\n      // we found a number so lets convert this pair\n      if(typeof coordinates[i][0] === \"number\"){\n        coordinates[i] = func(coordinates[i]);\n      }\n      // we found an coordinates array it again and run THIS function against it\n      if(typeof coordinates[i] === \"object\"){\n        coordinates[i] = eachPosition(coordinates[i], func);\n      }\n    }\n    return coordinates;\n  }\n\n  /*\n  Public: Convert a GeoJSON Position object to Geographic (4326)\n  */\n  function positionToGeographic(position) {\n    var x = position[0];\n    var y = position[1];\n    return [radToDeg(x / EarthRadius) - (Math.floor((radToDeg(x / EarthRadius) + 180) / 360) * 360), radToDeg((Math.PI / 2) - (2 * Math.atan(Math.exp(-1.0 * y / EarthRadius))))];\n  }\n\n  /*\n  Public: Convert a GeoJSON Position object to Web Mercator (102100)\n  */\n  function positionToMercator(position) {\n    var lng = position[0];\n    var lat = Math.max(Math.min(position[1], 89.99999), -89.99999);\n    return [degToRad(lng) * EarthRadius, EarthRadius/2.0 * Math.log( (1.0 + Math.sin(degToRad(lat))) / (1.0 - Math.sin(degToRad(lat))) )];\n  }\n\n  /*\n  Public: Apply a function agaist all positions in a geojson object. Used by spatial reference converters.\n  */\n  function applyConverter(geojson, converter, noCrs){\n    if(geojson.type === \"Point\") {\n      geojson.coordinates = converter(geojson.coordinates);\n    } else if(geojson.type === \"Feature\") {\n      geojson.geometry = applyConverter(geojson.geometry, converter, true);\n    } else if(geojson.type === \"FeatureCollection\") {\n      for (var f = 0; f < geojson.features.length; f++) {\n        geojson.features[f] = applyConverter(geojson.features[f], converter, true);\n      }\n    } else if(geojson.type === \"GeometryCollection\") {\n      for (var g = 0; g < geojson.geometries.length; g++) {\n        geojson.geometries[g] = applyConverter(geojson.geometries[g], converter, true);\n      }\n    } else {\n      geojson.coordinates = eachPosition(geojson.coordinates, converter);\n    }\n\n    if(!noCrs){\n      if(converter === positionToMercator){\n        geojson.crs = MercatorCRS;\n      }\n    }\n\n    if(converter === positionToGeographic){\n      delete geojson.crs;\n    }\n\n    return geojson;\n  }\n\n  /*\n  Public: Convert a GeoJSON object to ESRI Web Mercator (102100)\n  */\n  function toMercator(geojson) {\n    return applyConverter(geojson, positionToMercator);\n  }\n\n  /*\n  Convert a GeoJSON object to Geographic coordinates (WSG84, 4326)\n  */\n  function toGeographic(geojson) {\n    return applyConverter(geojson, positionToGeographic);\n  }\n\n\n  /*\n  Internal: -1,0,1 comparison function\n  */\n  function cmp(a, b) {\n    if(a < b) {\n      return -1;\n    } else if(a > b) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  /*\n  Internal: used for sorting\n  */\n  function compSort(p1, p2) {\n    if (p1[0] > p2[0]) {\n      return -1;\n    } else if (p1[0] < p2[0]) {\n      return 1;\n    } else if (p1[1] > p2[1]) {\n      return -1;\n    } else if (p1[1] < p2[1]) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n\n  /*\n  Internal: used to determine turn\n  */\n  function turn(p, q, r) {\n    // Returns -1, 0, 1 if p,q,r forms a right, straight, or left turn.\n    return cmp((q[0] - p[0]) * (r[1] - p[1]) - (r[0] - p[0]) * (q[1] - p[1]), 0);\n  }\n\n  /*\n  Internal: used to determine euclidean distance between two points\n  */\n  function euclideanDistance(p, q) {\n    // Returns the squared Euclidean distance between p and q.\n    var dx = q[0] - p[0];\n    var dy = q[1] - p[1];\n\n    return dx * dx + dy * dy;\n  }\n\n  function nextHullPoint(points, p) {\n    // Returns the next point on the convex hull in CCW from p.\n    var q = p;\n    for(var r in points) {\n      var t = turn(p, q, points[r]);\n      if(t === -1 || t === 0 && euclideanDistance(p, points[r]) > euclideanDistance(p, q)) {\n        q = points[r];\n      }\n    }\n    return q;\n  }\n\n  function convexHull(points) {\n    // implementation of the Jarvis March algorithm\n    // adapted from http://tixxit.wordpress.com/2009/12/09/jarvis-march/\n\n    if(points.length === 0) {\n      return [];\n    } else if(points.length === 1) {\n      return points;\n    }\n\n    // Returns the points on the convex hull of points in CCW order.\n    var hull = [points.sort(compSort)[0]];\n\n    for(var p = 0; p < hull.length; p++) {\n      var q = nextHullPoint(points, hull[p]);\n\n      if(q !== hull[0]) {\n        hull.push(q);\n      }\n    }\n\n    return hull;\n  }\n\n  function isConvex(points) {\n    var ltz;\n\n    for (var i = 0; i < points.length - 3; i++) {\n      var p1 = points[i];\n      var p2 = points[i + 1];\n      var p3 = points[i + 2];\n      var v = [p2[0] - p1[0], p2[1] - p1[1]];\n\n      // p3.x * v.y - p3.y * v.x + v.x * p1.y - v.y * p1.x\n      var res = p3[0] * v[1] - p3[1] * v[0] + v[0] * p1[1] - v[1] * p1[0];\n\n      if (i === 0) {\n        if (res < 0) {\n          ltz = true;\n        } else {\n          ltz = false;\n        }\n      } else {\n        if (ltz && (res > 0) || !ltz && (res < 0)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function coordinatesContainPoint(coordinates, point) {\n    var contains = false;\n    for(var i = -1, l = coordinates.length, j = l - 1; ++i < l; j = i) {\n      if (((coordinates[i][1] <= point[1] && point[1] < coordinates[j][1]) ||\n           (coordinates[j][1] <= point[1] && point[1] < coordinates[i][1])) &&\n          (point[0] < (coordinates[j][0] - coordinates[i][0]) * (point[1] - coordinates[i][1]) / (coordinates[j][1] - coordinates[i][1]) + coordinates[i][0])) {\n        contains = !contains;\n      }\n    }\n    return contains;\n  }\n\n  function polygonContainsPoint(polygon, point) {\n    if (polygon && polygon.length) {\n      if (polygon.length === 1) { // polygon with no holes\n        return coordinatesContainPoint(polygon[0], point);\n      } else { // polygon with holes\n        if (coordinatesContainPoint(polygon[0], point)) {\n          for (var i = 1; i < polygon.length; i++) {\n            if (coordinatesContainPoint(polygon[i], point)) {\n              return false; // found in hole\n            }\n          }\n\n          return true;\n        } else {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n  }\n\n  function edgeIntersectsEdge(a1, a2, b1, b2) {\n    var ua_t = (b2[0] - b1[0]) * (a1[1] - b1[1]) - (b2[1] - b1[1]) * (a1[0] - b1[0]);\n    var ub_t = (a2[0] - a1[0]) * (a1[1] - b1[1]) - (a2[1] - a1[1]) * (a1[0] - b1[0]);\n    var u_b  = (b2[1] - b1[1]) * (a2[0] - a1[0]) - (b2[0] - b1[0]) * (a2[1] - a1[1]);\n\n    if ( u_b !== 0 ) {\n      var ua = ua_t / u_b;\n      var ub = ub_t / u_b;\n\n      if ( 0 <= ua && ua <= 1 && 0 <= ub && ub <= 1 ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function arraysIntersectArrays(a, b) {\n    if (isNumber(a[0][0])) {\n      if (isNumber(b[0][0])) {\n        for (var i = 0; i < a.length - 1; i++) {\n          for (var j = 0; j < b.length - 1; j++) {\n            if (edgeIntersectsEdge(a[i], a[i + 1], b[j], b[j + 1])) {\n              return true;\n            }\n          }\n        }\n      } else {\n        for (var k = 0; k < b.length; k++) {\n          if (arraysIntersectArrays(a, b[k])) {\n            return true;\n          }\n        }\n      }\n    } else {\n      for (var l = 0; l < a.length; l++) {\n        if (arraysIntersectArrays(a[l], b)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /*\n  Internal: Returns a copy of coordinates for s closed polygon\n  */\n  function closedPolygon(coordinates) {\n    var outer = [ ];\n\n    for (var i = 0; i < coordinates.length; i++) {\n      var inner = coordinates[i].slice();\n      if (pointsEqual(inner[0], inner[inner.length - 1]) === false) {\n        inner.push(inner[0]);\n      }\n\n      outer.push(inner);\n    }\n\n    return outer;\n  }\n\n  function pointsEqual(a, b) {\n    for (var i = 0; i < a.length; i++) {\n\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function coordinatesEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    var na = a.slice().sort(compSort);\n    var nb = b.slice().sort(compSort);\n\n    for (var i = 0; i < na.length; i++) {\n      if (na[i].length !== nb[i].length) {\n        return false;\n      }\n      for (var j = 0; j < na.length; j++) {\n        if (na[i][j] !== nb[i][j]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /*\n  Internal: An array of variables that will be excluded form JSON objects.\n  */\n  var excludeFromJSON = [\"length\"];\n\n  /*\n  Internal: Base GeoJSON Primitive\n  */\n  function Primitive(geojson){\n    if(geojson){\n      switch (geojson.type) {\n      case 'Point':\n        return new Point(geojson);\n\n      case 'MultiPoint':\n        return new MultiPoint(geojson);\n\n      case 'LineString':\n        return new LineString(geojson);\n\n      case 'MultiLineString':\n        return new MultiLineString(geojson);\n\n      case 'Polygon':\n        return new Polygon(geojson);\n\n      case 'MultiPolygon':\n        return new MultiPolygon(geojson);\n\n      case 'Feature':\n        return new Feature(geojson);\n\n      case 'FeatureCollection':\n        return new FeatureCollection(geojson);\n\n      case 'GeometryCollection':\n        return new GeometryCollection(geojson);\n\n      default:\n        throw new Error(\"Unknown type: \" + geojson.type);\n      }\n    }\n  }\n\n  Primitive.prototype.toMercator = function(){\n    return toMercator(this);\n  };\n\n  Primitive.prototype.toGeographic = function(){\n    return toGeographic(this);\n  };\n\n  Primitive.prototype.envelope = function(){\n    return calculateEnvelope(this);\n  };\n\n  Primitive.prototype.bbox = function(){\n    return calculateBounds(this);\n  };\n\n  Primitive.prototype.convexHull = function(){\n    var coordinates = [ ], i, j;\n    if (this.type === 'Point') {\n      return null;\n    } else if (this.type === 'LineString' || this.type === 'MultiPoint') {\n      if (this.coordinates && this.coordinates.length >= 3) {\n        coordinates = this.coordinates;\n      } else {\n        return null;\n      }\n    } else if (this.type === 'Polygon' || this.type === 'MultiLineString') {\n      if (this.coordinates && this.coordinates.length > 0) {\n        for (i = 0; i < this.coordinates.length; i++) {\n          coordinates = coordinates.concat(this.coordinates[i]);\n        }\n        if(coordinates.length < 3){\n          return null;\n        }\n      } else {\n        return null;\n      }\n    } else if (this.type === 'MultiPolygon') {\n      if (this.coordinates && this.coordinates.length > 0) {\n        for (i = 0; i < this.coordinates.length; i++) {\n          for (j = 0; j < this.coordinates[i].length; j++) {\n            coordinates = coordinates.concat(this.coordinates[i][j]);\n          }\n        }\n        if(coordinates.length < 3){\n          return null;\n        }\n      } else {\n        return null;\n      }\n    } else if(this.type === \"Feature\"){\n      var primitive = new Primitive(this.geometry);\n      return primitive.convexHull();\n    }\n\n    return new Polygon({\n      type: 'Polygon',\n      coordinates: closedPolygon([convexHull(coordinates)])\n    });\n  };\n\n  Primitive.prototype.toJSON = function(){\n    var obj = {};\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && excludeFromJSON.indexOf(key) === -1) {\n        obj[key] = this[key];\n      }\n    }\n    obj.bbox = calculateBounds(this);\n    return obj;\n  };\n\n  Primitive.prototype.contains = function(primitive){\n    return new Primitive(primitive).within(this);\n  };\n\n  Primitive.prototype.within = function(primitive) {\n    var coordinates, i, j, contains;\n\n    // if we are passed a feature, use the polygon inside instead\n    if (primitive.type === 'Feature') {\n      primitive = primitive.geometry;\n    }\n\n    // point.within(point) :: equality\n    if (primitive.type === \"Point\") {\n      if (this.type === \"Point\") {\n        return pointsEqual(this.coordinates, primitive.coordinates);\n\n      }\n    }\n\n    // point.within(multilinestring)\n    if (primitive.type === \"MultiLineString\") {\n      if (this.type === \"Point\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          var linestring = { type: \"LineString\", coordinates: primitive.coordinates[i] };\n\n          if (this.within(linestring)) {\n            return true;\n          }\n        }\n      }\n    }\n\n    // point.within(linestring), point.within(multipoint)\n    if (primitive.type === \"LineString\" || primitive.type === \"MultiPoint\") {\n      if (this.type === \"Point\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          if (this.coordinates.length !== primitive.coordinates[i].length) {\n            return false;\n          }\n\n          if (pointsEqual(this.coordinates, primitive.coordinates[i])) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (primitive.type === \"Polygon\") {\n      // polygon.within(polygon)\n      if (this.type === \"Polygon\") {\n        // check for equal polygons\n        if (primitive.coordinates.length === this.coordinates.length) {\n          for (i = 0; i < this.coordinates.length; i++) {\n            if (coordinatesEqual(this.coordinates[i], primitive.coordinates[i])) {\n              return true;\n            }\n          }\n        }\n\n        if (this.coordinates.length && polygonContainsPoint(primitive.coordinates, this.coordinates[0][0])) {\n          return !arraysIntersectArrays(closedPolygon(this.coordinates), closedPolygon(primitive.coordinates));\n        } else {\n          return false;\n        }\n\n      // point.within(polygon)\n      } else if (this.type === \"Point\") {\n        return polygonContainsPoint(primitive.coordinates, this.coordinates);\n\n      // linestring/multipoint withing polygon\n      } else if (this.type === \"LineString\" || this.type === \"MultiPoint\") {\n        if (!this.coordinates || this.coordinates.length === 0) {\n          return false;\n        }\n\n        for (i = 0; i < this.coordinates.length; i++) {\n          if (polygonContainsPoint(primitive.coordinates, this.coordinates[i]) === false) {\n            return false;\n          }\n        }\n\n        return true;\n\n      // multilinestring.within(polygon)\n      } else if (this.type === \"MultiLineString\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          var ls = new LineString(this.coordinates[i]);\n\n          if (ls.within(primitive) === false) {\n            contains++;\n            return false;\n          }\n        }\n\n        return true;\n\n      // multipolygon.within(polygon)\n      } else if (this.type === \"MultiPolygon\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          var p1 = new Primitive({ type: \"Polygon\", coordinates: this.coordinates[i] });\n\n          if (p1.within(primitive) === false) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n    }\n\n    if (primitive.type === \"MultiPolygon\") {\n      // point.within(multipolygon)\n      if (this.type === \"Point\") {\n        if (primitive.coordinates.length) {\n          for (i = 0; i < primitive.coordinates.length; i++) {\n            coordinates = primitive.coordinates[i];\n            if (polygonContainsPoint(coordinates, this.coordinates) && arraysIntersectArrays([this.coordinates], primitive.coordinates) === false) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      // polygon.within(multipolygon)\n      } else if (this.type === \"Polygon\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          if (primitive.coordinates[i].length === this.coordinates.length) {\n            for (j = 0; j < this.coordinates.length; j++) {\n              if (coordinatesEqual(this.coordinates[j], primitive.coordinates[i][j])) {\n                return true;\n              }\n            }\n          }\n        }\n\n        if (arraysIntersectArrays(this.coordinates, primitive.coordinates) === false) {\n          if (primitive.coordinates.length) {\n            for (i = 0; i < primitive.coordinates.length; i++) {\n              coordinates = primitive.coordinates[i];\n              if (polygonContainsPoint(coordinates, this.coordinates[0][0]) === false) {\n                contains = false;\n              } else {\n                contains = true;\n              }\n            }\n\n            return contains;\n          }\n        }\n\n      // linestring.within(multipolygon), multipoint.within(multipolygon)\n      } else if (this.type === \"LineString\" || this.type === \"MultiPoint\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          var p = { type: \"Polygon\", coordinates: primitive.coordinates[i] };\n\n          if (this.within(p)) {\n            return true;\n          }\n\n          return false;\n        }\n\n      // multilinestring.within(multipolygon)\n      } else if (this.type === \"MultiLineString\") {\n        for (i = 0; i < this.coordinates.length; i++) {\n          var lines = new LineString(this.coordinates[i]);\n\n          if (lines.within(primitive) === false) {\n            return false;\n          }\n        }\n\n        return true;\n\n      // multipolygon.within(multipolygon)\n      } else if (this.type === \"MultiPolygon\") {\n        for (i = 0; i < primitive.coordinates.length; i++) {\n          var mpoly = { type: \"Polygon\", coordinates: primitive.coordinates[i] };\n\n          if (this.within(mpoly) === false) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    // default to false\n    return false;\n  };\n\n  Primitive.prototype.intersects = function(primitive) {\n    // if we are passed a feature, use the polygon inside instead\n    if (primitive.type === 'Feature') {\n      primitive = primitive.geometry;\n    }\n\n    var p = new Primitive(primitive);\n    if (this.within(primitive) || p.within(this)) {\n      return true;\n    }\n\n\n    if (this.type !== 'Point' && this.type !== 'MultiPoint' &&\n        primitive.type !== 'Point' && primitive.type !== 'MultiPoint') {\n      return arraysIntersectArrays(this.coordinates, primitive.coordinates);\n    } else if (this.type === 'Feature') {\n      // in the case of a Feature, use the internal primitive for intersection\n      var inner = new Primitive(this.geometry);\n      return inner.intersects(primitive);\n    }\n\n    warn(\"Type \" + this.type + \" to \" + primitive.type + \" intersection is not supported by intersects\");\n    return false;\n  };\n\n\n  /*\n  GeoJSON Point Class\n    new Point();\n    new Point(x,y,z,wtf);\n    new Point([x,y,z,wtf]);\n    new Point([x,y]);\n    new Point({\n      type: \"Point\",\n      coordinates: [x,y]\n    });\n  */\n  function Point(input){\n    var args = Array.prototype.slice.call(arguments);\n\n    if(input && input.type === \"Point\" && input.coordinates){\n      extend(this, input);\n    } else if(input && isArray(input)) {\n      this.coordinates = input;\n    } else if(args.length >= 2) {\n      this.coordinates = args;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.Point\";\n    }\n\n    this.type = \"Point\";\n  }\n\n  Point.prototype = new Primitive();\n  Point.prototype.constructor = Point;\n\n  /*\n  GeoJSON MultiPoint Class\n      new MultiPoint();\n      new MultiPoint([[x,y], [x1,y1]]);\n      new MultiPoint({\n        type: \"MultiPoint\",\n        coordinates: [x,y]\n      });\n  */\n  function MultiPoint(input){\n    if(input && input.type === \"MultiPoint\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.MultiPoint\";\n    }\n\n    this.type = \"MultiPoint\";\n  }\n\n  MultiPoint.prototype = new Primitive();\n  MultiPoint.prototype.constructor = MultiPoint;\n  MultiPoint.prototype.forEach = function(func){\n    for (var i = 0; i < this.coordinates.length; i++) {\n      func.apply(this, [this.coordinates[i], i, this.coordinates]);\n    }\n    return this;\n  };\n  MultiPoint.prototype.addPoint = function(point){\n    this.coordinates.push(point);\n    return this;\n  };\n  MultiPoint.prototype.insertPoint = function(point, index){\n    this.coordinates.splice(index, 0, point);\n    return this;\n  };\n  MultiPoint.prototype.removePoint = function(remove){\n    if(typeof remove === \"number\"){\n      this.coordinates.splice(remove, 1);\n    } else {\n      this.coordinates.splice(this.coordinates.indexOf(remove), 1);\n    }\n    return this;\n  };\n  MultiPoint.prototype.get = function(i){\n    return new Point(this.coordinates[i]);\n  };\n\n  /*\n  GeoJSON LineString Class\n      new LineString();\n      new LineString([[x,y], [x1,y1]]);\n      new LineString({\n        type: \"LineString\",\n        coordinates: [x,y]\n      });\n  */\n  function LineString(input){\n    if(input && input.type === \"LineString\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.LineString\";\n    }\n\n    this.type = \"LineString\";\n  }\n\n  LineString.prototype = new Primitive();\n  LineString.prototype.constructor = LineString;\n  LineString.prototype.addVertex = function(point){\n    this.coordinates.push(point);\n    return this;\n  };\n  LineString.prototype.insertVertex = function(point, index){\n    this.coordinates.splice(index, 0, point);\n    return this;\n  };\n  LineString.prototype.removeVertex = function(remove){\n    this.coordinates.splice(remove, 1);\n    return this;\n  };\n\n  /*\n  GeoJSON MultiLineString Class\n      new MultiLineString();\n      new MultiLineString([ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ]);\n      new MultiLineString({\n        type: \"MultiLineString\",\n        coordinates: [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ]\n      });\n  */\n  function MultiLineString(input){\n    if(input && input.type === \"MultiLineString\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.MultiLineString\";\n    }\n\n    this.type = \"MultiLineString\";\n  }\n\n  MultiLineString.prototype = new Primitive();\n  MultiLineString.prototype.constructor = MultiLineString;\n  MultiLineString.prototype.forEach = function(func){\n    for (var i = 0; i < this.coordinates.length; i++) {\n      func.apply(this, [this.coordinates[i], i, this.coordinates ]);\n    }\n  };\n  MultiLineString.prototype.get = function(i){\n    return new LineString(this.coordinates[i]);\n  };\n\n  /*\n  GeoJSON Polygon Class\n      new Polygon();\n      new Polygon([ [[x,y], [x1,y1], [x2,y2]] ]);\n      new Polygon({\n        type: \"Polygon\",\n        coordinates: [ [[x,y], [x1,y1], [x2,y2]] ]\n      });\n  */\n  function Polygon(input){\n    if(input && input.type === \"Polygon\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.Polygon\";\n    }\n\n    this.type = \"Polygon\";\n  }\n\n  Polygon.prototype = new Primitive();\n  Polygon.prototype.constructor = Polygon;\n  Polygon.prototype.addVertex = function(point){\n    this.insertVertex(point, this.coordinates[0].length - 1);\n    return this;\n  };\n  Polygon.prototype.insertVertex = function(point, index){\n    this.coordinates[0].splice(index, 0, point);\n    return this;\n  };\n  Polygon.prototype.removeVertex = function(remove){\n    this.coordinates[0].splice(remove, 1);\n    return this;\n  };\n  Polygon.prototype.close = function() {\n    this.coordinates = closedPolygon(this.coordinates);\n  };\n  Polygon.prototype.hasHoles = function() {\n    return this.coordinates.length > 1;\n  };\n  Polygon.prototype.holes = function() {\n    var holes = [];\n    if (this.hasHoles()) {\n      for (var i = 1; i < this.coordinates.length; i++) {\n        holes.push(new Polygon([this.coordinates[i]]));\n      }\n    }\n    return holes;\n  };\n\n  /*\n  GeoJSON MultiPolygon Class\n      new MultiPolygon();\n      new MultiPolygon([ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]);\n      new MultiPolygon({\n        type: \"MultiPolygon\",\n        coordinates: [ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]\n      });\n  */\n  function MultiPolygon(input){\n    if(input && input.type === \"MultiPolygon\" && input.coordinates){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.coordinates = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.MultiPolygon\";\n    }\n\n    this.type = \"MultiPolygon\";\n  }\n\n  MultiPolygon.prototype = new Primitive();\n  MultiPolygon.prototype.constructor = MultiPolygon;\n  MultiPolygon.prototype.forEach = function(func){\n    for (var i = 0; i < this.coordinates.length; i++) {\n      func.apply(this, [this.coordinates[i], i, this.coordinates ]);\n    }\n  };\n  MultiPolygon.prototype.get = function(i){\n    return new Polygon(this.coordinates[i]);\n  };\n  MultiPolygon.prototype.close = function(){\n    var outer = [];\n    this.forEach(function(polygon){\n      outer.push(closedPolygon(polygon));\n    });\n    this.coordinates = outer;\n    return this;\n  };\n\n  /*\n  GeoJSON Feature Class\n      new Feature();\n      new Feature({\n        type: \"Feature\",\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]\n        }\n      });\n      new Feature({\n        type: \"Polygon\",\n        coordinates: [ [ [[x,y], [x1,y1]], [[x2,y2], [x3,y3]] ] ]\n      });\n  */\n  function Feature(input){\n    if(input && input.type === \"Feature\"){\n      extend(this, input);\n    } else if(input && input.type && input.coordinates) {\n      this.geometry = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.Feature\";\n    }\n\n    this.type = \"Feature\";\n  }\n\n  Feature.prototype = new Primitive();\n  Feature.prototype.constructor = Feature;\n\n  /*\n  GeoJSON FeatureCollection Class\n      new FeatureCollection();\n      new FeatureCollection([feature, feature1]);\n      new FeatureCollection({\n        type: \"FeatureCollection\",\n        coordinates: [feature, feature1]\n      });\n  */\n  function FeatureCollection(input){\n    if(input && input.type === \"FeatureCollection\" && input.features){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.features = input;\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.FeatureCollection\";\n    }\n\n    this.type = \"FeatureCollection\";\n  }\n\n  FeatureCollection.prototype = new Primitive();\n  FeatureCollection.prototype.constructor = FeatureCollection;\n  FeatureCollection.prototype.forEach = function(func){\n    for (var i = 0; i < this.features.length; i++) {\n      func.apply(this, [this.features[i], i, this.features]);\n    }\n  };\n  FeatureCollection.prototype.get = function(id){\n    var found;\n    this.forEach(function(feature){\n      if(feature.id === id){\n        found = feature;\n      }\n    });\n    return new Feature(found);\n  };\n\n  /*\n  GeoJSON GeometryCollection Class\n      new GeometryCollection();\n      new GeometryCollection([geometry, geometry1]);\n      new GeometryCollection({\n        type: \"GeometryCollection\",\n        coordinates: [geometry, geometry1]\n      });\n  */\n  function GeometryCollection(input){\n    if(input && input.type === \"GeometryCollection\" && input.geometries){\n      extend(this, input);\n    } else if(isArray(input)) {\n      this.geometries = input;\n    } else if(input.coordinates && input.type){\n      this.type = \"GeometryCollection\";\n      this.geometries = [input];\n    } else {\n      throw \"Terraformer: invalid input for Terraformer.GeometryCollection\";\n    }\n\n    this.type = \"GeometryCollection\";\n  }\n\n  GeometryCollection.prototype = new Primitive();\n  GeometryCollection.prototype.constructor = GeometryCollection;\n  GeometryCollection.prototype.forEach = function(func){\n    for (var i = 0; i < this.geometries.length; i++) {\n      func.apply(this, [this.geometries[i], i, this.geometries]);\n    }\n  };\n  GeometryCollection.prototype.get = function(i){\n    return new Primitive(this.geometries[i]);\n  };\n\n  function createCircle(center, radius, interpolate){\n    var mercatorPosition = positionToMercator(center);\n    var steps = interpolate || 64;\n    var polygon = {\n      type: \"Polygon\",\n      coordinates: [[]]\n    };\n    for(var i=1; i<=steps; i++) {\n      var radians = i * (360/steps) * Math.PI / 180;\n      polygon.coordinates[0].push([mercatorPosition[0] + radius * Math.cos(radians), mercatorPosition[1] + radius * Math.sin(radians)]);\n    }\n    polygon.coordinates = closedPolygon(polygon.coordinates);\n\n    return toGeographic(polygon);\n  }\n\n  function Circle (center, radius, interpolate) {\n    var steps = interpolate || 64;\n    var rad = radius || 250;\n\n    if(!center || center.length < 2 || !rad || !steps) {\n      throw new Error(\"Terraformer: missing parameter for Terraformer.Circle\");\n    }\n\n    extend(this, new Feature({\n      type: \"Feature\",\n      geometry: createCircle(center, rad, steps),\n      properties: {\n        radius: rad,\n        center: center,\n        steps: steps\n      }\n    }));\n  }\n\n  Circle.prototype = new Primitive();\n  Circle.prototype.constructor = Circle;\n  Circle.prototype.recalculate = function(){\n    this.geometry = createCircle(this.properties.center, this.properties.radius, this.properties.steps);\n    return this;\n  };\n  Circle.prototype.center = function(coordinates){\n    if(coordinates){\n      this.properties.center = coordinates;\n      this.recalculate();\n    }\n    return this.properties.center;\n  };\n  Circle.prototype.radius = function(radius){\n    if(radius){\n      this.properties.radius = radius;\n      this.recalculate();\n    }\n    return this.properties.radius;\n  };\n  Circle.prototype.steps = function(steps){\n    if(steps){\n      this.properties.steps = steps;\n      this.recalculate();\n    }\n    return this.properties.steps;\n  };\n\n  Circle.prototype.toJSON = function() {\n    var output = Primitive.prototype.toJSON.call(this);\n    return output;\n  };\n\n  exports.Primitive = Primitive;\n  exports.Point = Point;\n  exports.MultiPoint = MultiPoint;\n  exports.LineString = LineString;\n  exports.MultiLineString = MultiLineString;\n  exports.Polygon = Polygon;\n  exports.MultiPolygon = MultiPolygon;\n  exports.Feature = Feature;\n  exports.FeatureCollection = FeatureCollection;\n  exports.GeometryCollection = GeometryCollection;\n  exports.Circle = Circle;\n\n  exports.toMercator = toMercator;\n  exports.toGeographic = toGeographic;\n\n  exports.Tools = {};\n  exports.Tools.positionToMercator = positionToMercator;\n  exports.Tools.positionToGeographic = positionToGeographic;\n  exports.Tools.applyConverter = applyConverter;\n  exports.Tools.toMercator = toMercator;\n  exports.Tools.toGeographic = toGeographic;\n  exports.Tools.createCircle = createCircle;\n\n  exports.Tools.calculateBounds = calculateBounds;\n  exports.Tools.calculateEnvelope = calculateEnvelope;\n\n  exports.Tools.coordinatesContainPoint = coordinatesContainPoint;\n  exports.Tools.polygonContainsPoint = polygonContainsPoint;\n  exports.Tools.arraysIntersectArrays = arraysIntersectArrays;\n  exports.Tools.coordinatesContainPoint = coordinatesContainPoint;\n  exports.Tools.coordinatesEqual = coordinatesEqual;\n  exports.Tools.convexHull = convexHull;\n  exports.Tools.isConvex = isConvex;\n\n  exports.MercatorCRS = MercatorCRS;\n  exports.GeographicCRS = GeographicCRS;\n\n  return exports;\n}));\n"],"names":["root","factory","this","exports","EarthRadius","DegreesPerRadian","RadiansPerDegree","MercatorCRS","isArray","obj","Object","prototype","toString","call","extend","destination","source","k","hasOwnProperty","calculateBounds","geojson","type","coordinates","calculateBoundsFromArray","calculateBoundsFromNestedArrays","array","x1","x2","y1","y2","i","length","inner","j","innerinner","lonlat","lon","lat","calculateBoundsFromNestedArrayOfArrays","geometry","featureCollection","extent","extents","features","push","calculateBoundsForFeatureCollection","geometryCollection","geometries","calculateBoundsForGeometryCollection","Error","calculateEnvelope","bounds","x","y","w","Math","abs","h","radToDeg","rad","degToRad","deg","eachPosition","func","positionToGeographic","position","floor","PI","atan","exp","positionToMercator","lng","max","min","log","sin","applyConverter","converter","noCrs","f","g","crs","toMercator","toGeographic","compSort","p1","p2","turn","p","q","r","a","b","euclideanDistance","dx","dy","nextHullPoint","points","t","convexHull","hull","sort","coordinatesContainPoint","point","contains","l","polygonContainsPoint","polygon","edgeIntersectsEdge","a1","a2","b1","b2","ua_t","ub_t","u_b","ua","ub","isNumber","n","isNaN","parseFloat","isFinite","arraysIntersectArrays","closedPolygon","outer","slice","pointsEqual","coordinatesEqual","na","nb","excludeFromJSON","Primitive","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","Feature","FeatureCollection","GeometryCollection","input","args","Array","arguments","createCircle","center","radius","interpolate","mercatorPosition","steps","radians","cos","Circle","properties","envelope","bbox","concat","toJSON","key","indexOf","primitive","within","linestring","mpoly","intersects","apply","undefined","console","warn","constructor","forEach","addPoint","insertPoint","index","splice","removePoint","remove","get","addVertex","insertVertex","removeVertex","close","hasHoles","holes","id","found","feature","recalculate","Tools","isConvex","ltz","p3","v","res","GeographicCRS","module","window","Terraformer"],"sourceRoot":""}